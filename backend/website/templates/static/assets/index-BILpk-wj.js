(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function n(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=n(o);fetch(o.href,r)}})();/**
* @vue/shared v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function as(e,t){const n=new Set(e.split(","));return t?s=>n.has(s.toLowerCase()):s=>n.has(s)}const Q={},yt=[],be=()=>{},Gr=()=>!1,_n=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),fs=e=>e.startsWith("onUpdate:"),le=Object.assign,hs=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},Yr=Object.prototype.hasOwnProperty,K=(e,t)=>Yr.call(e,t),F=Array.isArray,bt=e=>yn(e)==="[object Map]",No=e=>yn(e)==="[object Set]",H=e=>typeof e=="function",se=e=>typeof e=="string",Ot=e=>typeof e=="symbol",ee=e=>e!==null&&typeof e=="object",Lo=e=>(ee(e)||H(e))&&H(e.then)&&H(e.catch),Fo=Object.prototype.toString,yn=e=>Fo.call(e),Qr=e=>yn(e).slice(8,-1),jo=e=>yn(e)==="[object Object]",ds=e=>se(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,Lt=as(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),bn=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},Jr=/-(\w)/g,Fe=bn(e=>e.replace(Jr,(t,n)=>n?n.toUpperCase():"")),Xr=/\B([A-Z])/g,At=bn(e=>e.replace(Xr,"-$1").toLowerCase()),wn=bn(e=>e.charAt(0).toUpperCase()+e.slice(1)),$n=bn(e=>e?`on${wn(e)}`:""),Xe=(e,t)=>!Object.is(e,t),sn=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},fn=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},Gn=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let Ns;const ko=()=>Ns||(Ns=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function ps(e){if(F(e)){const t={};for(let n=0;n<e.length;n++){const s=e[n],o=se(s)?ni(s):ps(s);if(o)for(const r in o)t[r]=o[r]}return t}else if(se(e)||ee(e))return e}const Zr=/;(?![^(]*\))/g,ei=/:([^]+)/,ti=/\/\*[^]*?\*\//g;function ni(e){const t={};return e.replace(ti,"").split(Zr).forEach(n=>{if(n){const s=n.split(ei);s.length>1&&(t[s[0].trim()]=s[1].trim())}}),t}function wt(e){let t="";if(se(e))t=e;else if(F(e))for(let n=0;n<e.length;n++){const s=wt(e[n]);s&&(t+=s+" ")}else if(ee(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}const si="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",oi=as(si);function Ho(e){return!!e||e===""}const hn=e=>se(e)?e:e==null?"":F(e)||ee(e)&&(e.toString===Fo||!H(e.toString))?JSON.stringify(e,Bo,2):String(e),Bo=(e,t)=>t&&t.__v_isRef?Bo(e,t.value):bt(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((n,[s,o],r)=>(n[Nn(s,r)+" =>"]=o,n),{})}:No(t)?{[`Set(${t.size})`]:[...t.values()].map(n=>Nn(n))}:Ot(t)?Nn(t):ee(t)&&!F(t)&&!jo(t)?String(t):t,Nn=(e,t="")=>{var n;return Ot(e)?`Symbol(${(n=e.description)!=null?n:t})`:e};/**
* @vue/reactivity v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Ee;class ri{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Ee,!t&&Ee&&(this.index=(Ee.scopes||(Ee.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const n=Ee;try{return Ee=this,t()}finally{Ee=n}}}on(){Ee=this}off(){Ee=this.parent}stop(t){if(this._active){let n,s;for(n=0,s=this.effects.length;n<s;n++)this.effects[n].stop();for(n=0,s=this.cleanups.length;n<s;n++)this.cleanups[n]();if(this.scopes)for(n=0,s=this.scopes.length;n<s;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!t){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this._active=!1}}}function ii(e,t=Ee){t&&t.active&&t.effects.push(e)}function li(){return Ee}let lt;class gs{constructor(t,n,s,o){this.fn=t,this.trigger=n,this.scheduler=s,this.active=!0,this.deps=[],this._dirtyLevel=4,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,ii(this,o)}get dirty(){if(this._dirtyLevel===2||this._dirtyLevel===3){this._dirtyLevel=1,ft();for(let t=0;t<this._depsLength;t++){const n=this.deps[t];if(n.computed&&(ci(n.computed),this._dirtyLevel>=4))break}this._dirtyLevel===1&&(this._dirtyLevel=0),ht()}return this._dirtyLevel>=4}set dirty(t){this._dirtyLevel=t?4:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let t=Qe,n=lt;try{return Qe=!0,lt=this,this._runnings++,Ls(this),this.fn()}finally{Fs(this),this._runnings--,lt=n,Qe=t}}stop(){var t;this.active&&(Ls(this),Fs(this),(t=this.onStop)==null||t.call(this),this.active=!1)}}function ci(e){return e.value}function Ls(e){e._trackId++,e._depsLength=0}function Fs(e){if(e.deps.length>e._depsLength){for(let t=e._depsLength;t<e.deps.length;t++)Uo(e.deps[t],e);e.deps.length=e._depsLength}}function Uo(e,t){const n=e.get(t);n!==void 0&&t._trackId!==n&&(e.delete(t),e.size===0&&e.cleanup())}let Qe=!0,Yn=0;const Vo=[];function ft(){Vo.push(Qe),Qe=!1}function ht(){const e=Vo.pop();Qe=e===void 0?!0:e}function ms(){Yn++}function vs(){for(Yn--;!Yn&&Qn.length;)Qn.shift()()}function Ko(e,t,n){if(t.get(e)!==e._trackId){t.set(e,e._trackId);const s=e.deps[e._depsLength];s!==t?(s&&Uo(s,e),e.deps[e._depsLength++]=t):e._depsLength++}}const Qn=[];function Do(e,t,n){ms();for(const s of e.keys()){let o;s._dirtyLevel<t&&(o??(o=e.get(s)===s._trackId))&&(s._shouldSchedule||(s._shouldSchedule=s._dirtyLevel===0),s._dirtyLevel=t),s._shouldSchedule&&(o??(o=e.get(s)===s._trackId))&&(s.trigger(),(!s._runnings||s.allowRecurse)&&s._dirtyLevel!==2&&(s._shouldSchedule=!1,s.scheduler&&Qn.push(s.scheduler)))}vs()}const Wo=(e,t)=>{const n=new Map;return n.cleanup=e,n.computed=t,n},dn=new WeakMap,ct=Symbol(""),Jn=Symbol("");function ve(e,t,n){if(Qe&&lt){let s=dn.get(e);s||dn.set(e,s=new Map);let o=s.get(n);o||s.set(n,o=Wo(()=>s.delete(n))),Ko(lt,o)}}function He(e,t,n,s,o,r){const i=dn.get(e);if(!i)return;let c=[];if(t==="clear")c=[...i.values()];else if(n==="length"&&F(e)){const l=Number(s);i.forEach((h,f)=>{(f==="length"||!Ot(f)&&f>=l)&&c.push(h)})}else switch(n!==void 0&&c.push(i.get(n)),t){case"add":F(e)?ds(n)&&c.push(i.get("length")):(c.push(i.get(ct)),bt(e)&&c.push(i.get(Jn)));break;case"delete":F(e)||(c.push(i.get(ct)),bt(e)&&c.push(i.get(Jn)));break;case"set":bt(e)&&c.push(i.get(ct));break}ms();for(const l of c)l&&Do(l,4);vs()}function ui(e,t){var n;return(n=dn.get(e))==null?void 0:n.get(t)}const ai=as("__proto__,__v_isRef,__isVue"),qo=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Ot)),js=fi();function fi(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...n){const s=D(this);for(let r=0,i=this.length;r<i;r++)ve(s,"get",r+"");const o=s[t](...n);return o===-1||o===!1?s[t](...n.map(D)):o}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...n){ft(),ms();const s=D(this)[t].apply(this,n);return vs(),ht(),s}}),e}function hi(e){const t=D(this);return ve(t,"has",e),t.hasOwnProperty(e)}class zo{constructor(t=!1,n=!1){this._isReadonly=t,this._isShallow=n}get(t,n,s){const o=this._isReadonly,r=this._isShallow;if(n==="__v_isReactive")return!o;if(n==="__v_isReadonly")return o;if(n==="__v_isShallow")return r;if(n==="__v_raw")return s===(o?r?Si:Jo:r?Qo:Yo).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(s)?t:void 0;const i=F(t);if(!o){if(i&&K(js,n))return Reflect.get(js,n,s);if(n==="hasOwnProperty")return hi}const c=Reflect.get(t,n,s);return(Ot(n)?qo.has(n):ai(n))||(o||ve(t,"get",n),r)?c:de(c)?i&&ds(n)?c:c.value:ee(c)?o?Zo(c):Ze(c):c}}class Go extends zo{constructor(t=!1){super(!1,t)}set(t,n,s,o){let r=t[n];if(!this._isShallow){const l=Rt(r);if(!pn(s)&&!Rt(s)&&(r=D(r),s=D(s)),!F(t)&&de(r)&&!de(s))return l?!1:(r.value=s,!0)}const i=F(t)&&ds(n)?Number(n)<t.length:K(t,n),c=Reflect.set(t,n,s,o);return t===D(o)&&(i?Xe(s,r)&&He(t,"set",n,s):He(t,"add",n,s)),c}deleteProperty(t,n){const s=K(t,n);t[n];const o=Reflect.deleteProperty(t,n);return o&&s&&He(t,"delete",n,void 0),o}has(t,n){const s=Reflect.has(t,n);return(!Ot(n)||!qo.has(n))&&ve(t,"has",n),s}ownKeys(t){return ve(t,"iterate",F(t)?"length":ct),Reflect.ownKeys(t)}}class di extends zo{constructor(t=!1){super(!0,t)}set(t,n){return!0}deleteProperty(t,n){return!0}}const pi=new Go,gi=new di,mi=new Go(!0),_s=e=>e,xn=e=>Reflect.getPrototypeOf(e);function Jt(e,t,n=!1,s=!1){e=e.__v_raw;const o=D(e),r=D(t);n||(Xe(t,r)&&ve(o,"get",t),ve(o,"get",r));const{has:i}=xn(o),c=s?_s:n?ws:Vt;if(i.call(o,t))return c(e.get(t));if(i.call(o,r))return c(e.get(r));e!==o&&e.get(t)}function Xt(e,t=!1){const n=this.__v_raw,s=D(n),o=D(e);return t||(Xe(e,o)&&ve(s,"has",e),ve(s,"has",o)),e===o?n.has(e):n.has(e)||n.has(o)}function Zt(e,t=!1){return e=e.__v_raw,!t&&ve(D(e),"iterate",ct),Reflect.get(e,"size",e)}function ks(e){e=D(e);const t=D(this);return xn(t).has.call(t,e)||(t.add(e),He(t,"add",e,e)),this}function Hs(e,t){t=D(t);const n=D(this),{has:s,get:o}=xn(n);let r=s.call(n,e);r||(e=D(e),r=s.call(n,e));const i=o.call(n,e);return n.set(e,t),r?Xe(t,i)&&He(n,"set",e,t):He(n,"add",e,t),this}function Bs(e){const t=D(this),{has:n,get:s}=xn(t);let o=n.call(t,e);o||(e=D(e),o=n.call(t,e)),s&&s.call(t,e);const r=t.delete(e);return o&&He(t,"delete",e,void 0),r}function Us(){const e=D(this),t=e.size!==0,n=e.clear();return t&&He(e,"clear",void 0,void 0),n}function en(e,t){return function(s,o){const r=this,i=r.__v_raw,c=D(i),l=t?_s:e?ws:Vt;return!e&&ve(c,"iterate",ct),i.forEach((h,f)=>s.call(o,l(h),l(f),r))}}function tn(e,t,n){return function(...s){const o=this.__v_raw,r=D(o),i=bt(r),c=e==="entries"||e===Symbol.iterator&&i,l=e==="keys"&&i,h=o[e](...s),f=n?_s:t?ws:Vt;return!t&&ve(r,"iterate",l?Jn:ct),{next(){const{value:d,done:p}=h.next();return p?{value:d,done:p}:{value:c?[f(d[0]),f(d[1])]:f(d),done:p}},[Symbol.iterator](){return this}}}}function De(e){return function(...t){return e==="delete"?!1:e==="clear"?void 0:this}}function vi(){const e={get(r){return Jt(this,r)},get size(){return Zt(this)},has:Xt,add:ks,set:Hs,delete:Bs,clear:Us,forEach:en(!1,!1)},t={get(r){return Jt(this,r,!1,!0)},get size(){return Zt(this)},has:Xt,add:ks,set:Hs,delete:Bs,clear:Us,forEach:en(!1,!0)},n={get(r){return Jt(this,r,!0)},get size(){return Zt(this,!0)},has(r){return Xt.call(this,r,!0)},add:De("add"),set:De("set"),delete:De("delete"),clear:De("clear"),forEach:en(!0,!1)},s={get(r){return Jt(this,r,!0,!0)},get size(){return Zt(this,!0)},has(r){return Xt.call(this,r,!0)},add:De("add"),set:De("set"),delete:De("delete"),clear:De("clear"),forEach:en(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(r=>{e[r]=tn(r,!1,!1),n[r]=tn(r,!0,!1),t[r]=tn(r,!1,!0),s[r]=tn(r,!0,!0)}),[e,n,t,s]}const[_i,yi,bi,wi]=vi();function ys(e,t){const n=t?e?wi:bi:e?yi:_i;return(s,o,r)=>o==="__v_isReactive"?!e:o==="__v_isReadonly"?e:o==="__v_raw"?s:Reflect.get(K(n,o)&&o in s?n:s,o,r)}const xi={get:ys(!1,!1)},Ei={get:ys(!1,!0)},Ri={get:ys(!0,!1)},Yo=new WeakMap,Qo=new WeakMap,Jo=new WeakMap,Si=new WeakMap;function Ci(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Pi(e){return e.__v_skip||!Object.isExtensible(e)?0:Ci(Qr(e))}function Ze(e){return Rt(e)?e:bs(e,!1,pi,xi,Yo)}function Xo(e){return bs(e,!1,mi,Ei,Qo)}function Zo(e){return bs(e,!0,gi,Ri,Jo)}function bs(e,t,n,s,o){if(!ee(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const r=o.get(e);if(r)return r;const i=Pi(e);if(i===0)return e;const c=new Proxy(e,i===2?s:n);return o.set(e,c),c}function xt(e){return Rt(e)?xt(e.__v_raw):!!(e&&e.__v_isReactive)}function Rt(e){return!!(e&&e.__v_isReadonly)}function pn(e){return!!(e&&e.__v_isShallow)}function er(e){return xt(e)||Rt(e)}function D(e){const t=e&&e.__v_raw;return t?D(t):e}function tr(e){return Object.isExtensible(e)&&fn(e,"__v_skip",!0),e}const Vt=e=>ee(e)?Ze(e):e,ws=e=>ee(e)?Zo(e):e;class nr{constructor(t,n,s,o){this.getter=t,this._setter=n,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new gs(()=>t(this._value),()=>on(this,this.effect._dirtyLevel===2?2:3)),this.effect.computed=this,this.effect.active=this._cacheable=!o,this.__v_isReadonly=s}get value(){const t=D(this);return(!t._cacheable||t.effect.dirty)&&Xe(t._value,t._value=t.effect.run())&&on(t,4),sr(t),t.effect._dirtyLevel>=2&&on(t,2),t._value}set value(t){this._setter(t)}get _dirty(){return this.effect.dirty}set _dirty(t){this.effect.dirty=t}}function Oi(e,t,n=!1){let s,o;const r=H(e);return r?(s=e,o=be):(s=e.get,o=e.set),new nr(s,o,r||!o,n)}function sr(e){var t;Qe&&lt&&(e=D(e),Ko(lt,(t=e.dep)!=null?t:e.dep=Wo(()=>e.dep=void 0,e instanceof nr?e:void 0)))}function on(e,t=4,n){e=D(e);const s=e.dep;s&&Do(s,t)}function de(e){return!!(e&&e.__v_isRef===!0)}function or(e){return rr(e,!1)}function Ai(e){return rr(e,!0)}function rr(e,t){return de(e)?e:new Ti(e,t)}class Ti{constructor(t,n){this.__v_isShallow=n,this.dep=void 0,this.__v_isRef=!0,this._rawValue=n?t:D(t),this._value=n?t:Vt(t)}get value(){return sr(this),this._value}set value(t){const n=this.__v_isShallow||pn(t)||Rt(t);t=n?t:D(t),Xe(t,this._rawValue)&&(this._rawValue=t,this._value=n?t:Vt(t),on(this,4))}}function ut(e){return de(e)?e.value:e}const Mi={get:(e,t,n)=>ut(Reflect.get(e,t,n)),set:(e,t,n,s)=>{const o=e[t];return de(o)&&!de(n)?(o.value=n,!0):Reflect.set(e,t,n,s)}};function ir(e){return xt(e)?e:new Proxy(e,Mi)}function Ii(e){const t=F(e)?new Array(e.length):{};for(const n in e)t[n]=Ni(e,n);return t}class $i{constructor(t,n,s){this._object=t,this._key=n,this._defaultValue=s,this.__v_isRef=!0}get value(){const t=this._object[this._key];return t===void 0?this._defaultValue:t}set value(t){this._object[this._key]=t}get dep(){return ui(D(this._object),this._key)}}function Ni(e,t,n){const s=e[t];return de(s)?s:new $i(e,t,n)}/**
* @vue/runtime-core v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Je(e,t,n,s){try{return s?e(...s):e()}catch(o){En(o,t,n)}}function Ce(e,t,n,s){if(H(e)){const r=Je(e,t,n,s);return r&&Lo(r)&&r.catch(i=>{En(i,t,n)}),r}const o=[];for(let r=0;r<e.length;r++)o.push(Ce(e[r],t,n,s));return o}function En(e,t,n,s=!0){const o=t?t.vnode:null;if(t){let r=t.parent;const i=t.proxy,c=`https://vuejs.org/error-reference/#runtime-${n}`;for(;r;){const h=r.ec;if(h){for(let f=0;f<h.length;f++)if(h[f](e,i,c)===!1)return}r=r.parent}const l=t.appContext.config.errorHandler;if(l){Je(l,null,10,[e,i,c]);return}}Li(e,n,o,s)}function Li(e,t,n,s=!0){console.error(e)}let Kt=!1,Xn=!1;const ue=[];let Le=0;const Et=[];let qe=null,ot=0;const lr=Promise.resolve();let xs=null;function cr(e){const t=xs||lr;return e?t.then(this?e.bind(this):e):t}function Fi(e){let t=Le+1,n=ue.length;for(;t<n;){const s=t+n>>>1,o=ue[s],r=Dt(o);r<e||r===e&&o.pre?t=s+1:n=s}return t}function Es(e){(!ue.length||!ue.includes(e,Kt&&e.allowRecurse?Le+1:Le))&&(e.id==null?ue.push(e):ue.splice(Fi(e.id),0,e),ur())}function ur(){!Kt&&!Xn&&(Xn=!0,xs=lr.then(fr))}function ji(e){const t=ue.indexOf(e);t>Le&&ue.splice(t,1)}function ki(e){F(e)?Et.push(...e):(!qe||!qe.includes(e,e.allowRecurse?ot+1:ot))&&Et.push(e),ur()}function Vs(e,t,n=Kt?Le+1:0){for(;n<ue.length;n++){const s=ue[n];if(s&&s.pre){if(e&&s.id!==e.uid)continue;ue.splice(n,1),n--,s()}}}function ar(e){if(Et.length){const t=[...new Set(Et)].sort((n,s)=>Dt(n)-Dt(s));if(Et.length=0,qe){qe.push(...t);return}for(qe=t,ot=0;ot<qe.length;ot++)qe[ot]();qe=null,ot=0}}const Dt=e=>e.id==null?1/0:e.id,Hi=(e,t)=>{const n=Dt(e)-Dt(t);if(n===0){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return n};function fr(e){Xn=!1,Kt=!0,ue.sort(Hi);try{for(Le=0;Le<ue.length;Le++){const t=ue[Le];t&&t.active!==!1&&Je(t,null,14)}}finally{Le=0,ue.length=0,ar(),Kt=!1,xs=null,(ue.length||Et.length)&&fr()}}function Bi(e,t,...n){if(e.isUnmounted)return;const s=e.vnode.props||Q;let o=n;const r=t.startsWith("update:"),i=r&&t.slice(7);if(i&&i in s){const f=`${i==="modelValue"?"model":i}Modifiers`,{number:d,trim:p}=s[f]||Q;p&&(o=n.map(y=>se(y)?y.trim():y)),d&&(o=n.map(Gn))}let c,l=s[c=$n(t)]||s[c=$n(Fe(t))];!l&&r&&(l=s[c=$n(At(t))]),l&&Ce(l,e,6,o);const h=s[c+"Once"];if(h){if(!e.emitted)e.emitted={};else if(e.emitted[c])return;e.emitted[c]=!0,Ce(h,e,6,o)}}function hr(e,t,n=!1){const s=t.emitsCache,o=s.get(e);if(o!==void 0)return o;const r=e.emits;let i={},c=!1;if(!H(e)){const l=h=>{const f=hr(h,t,!0);f&&(c=!0,le(i,f))};!n&&t.mixins.length&&t.mixins.forEach(l),e.extends&&l(e.extends),e.mixins&&e.mixins.forEach(l)}return!r&&!c?(ee(e)&&s.set(e,null),null):(F(r)?r.forEach(l=>i[l]=null):le(i,r),ee(e)&&s.set(e,i),i)}function Rn(e,t){return!e||!_n(t)?!1:(t=t.slice(2).replace(/Once$/,""),K(e,t[0].toLowerCase()+t.slice(1))||K(e,At(t))||K(e,t))}let me=null,Sn=null;function gn(e){const t=me;return me=e,Sn=e&&e.type.__scopeId||null,t}function Ui(e){Sn=e}function Vi(){Sn=null}function Ki(e,t=me,n){if(!t||e._n)return e;const s=(...o)=>{s._d&&Zs(-1);const r=gn(t);let i;try{i=e(...o)}finally{gn(r),s._d&&Zs(1)}return i};return s._n=!0,s._c=!0,s._d=!0,s}function Ln(e){const{type:t,vnode:n,proxy:s,withProxy:o,props:r,propsOptions:[i],slots:c,attrs:l,emit:h,render:f,renderCache:d,data:p,setupState:y,ctx:T,inheritAttrs:A}=e;let I,C;const L=gn(e);try{if(n.shapeFlag&4){const V=o||s,J=V;I=Ne(f.call(J,V,d,r,y,p,T)),C=l}else{const V=t;I=Ne(V.length>1?V(r,{attrs:l,slots:c,emit:h}):V(r,null)),C=t.props?l:Di(l)}}catch(V){kt.length=0,En(V,e,1),I=ie(at)}let j=I;if(C&&A!==!1){const V=Object.keys(C),{shapeFlag:J}=j;V.length&&J&7&&(i&&V.some(fs)&&(C=Wi(C,i)),j=St(j,C))}return n.dirs&&(j=St(j),j.dirs=j.dirs?j.dirs.concat(n.dirs):n.dirs),n.transition&&(j.transition=n.transition),I=j,gn(L),I}const Di=e=>{let t;for(const n in e)(n==="class"||n==="style"||_n(n))&&((t||(t={}))[n]=e[n]);return t},Wi=(e,t)=>{const n={};for(const s in e)(!fs(s)||!(s.slice(9)in t))&&(n[s]=e[s]);return n};function qi(e,t,n){const{props:s,children:o,component:r}=e,{props:i,children:c,patchFlag:l}=t,h=r.emitsOptions;if(t.dirs||t.transition)return!0;if(n&&l>=0){if(l&1024)return!0;if(l&16)return s?Ks(s,i,h):!!i;if(l&8){const f=t.dynamicProps;for(let d=0;d<f.length;d++){const p=f[d];if(i[p]!==s[p]&&!Rn(h,p))return!0}}}else return(o||c)&&(!c||!c.$stable)?!0:s===i?!1:s?i?Ks(s,i,h):!0:!!i;return!1}function Ks(e,t,n){const s=Object.keys(t);if(s.length!==Object.keys(e).length)return!0;for(let o=0;o<s.length;o++){const r=s[o];if(t[r]!==e[r]&&!Rn(n,r))return!0}return!1}function zi({vnode:e,parent:t},n){for(;t;){const s=t.subTree;if(s.suspense&&s.suspense.activeBranch===e&&(s.el=e.el),s===e)(e=t.vnode).el=n,t=t.parent;else break}}const dr="components";function Zn(e,t){return Yi(dr,e,!0,t)||e}const Gi=Symbol.for("v-ndc");function Yi(e,t,n=!0,s=!1){const o=me||ae;if(o){const r=o.type;if(e===dr){const c=Kl(r,!1);if(c&&(c===t||c===Fe(t)||c===wn(Fe(t))))return r}const i=Ds(o[e]||r[e],t)||Ds(o.appContext[e],t);return!i&&s?r:i}}function Ds(e,t){return e&&(e[t]||e[Fe(t)]||e[wn(Fe(t))])}const Qi=e=>e.__isSuspense;function Ji(e,t){t&&t.pendingBranch?F(e)?t.effects.push(...e):t.effects.push(e):ki(e)}const Xi=Symbol.for("v-scx"),Zi=()=>Be(Xi),nn={};function rn(e,t,n){return pr(e,t,n)}function pr(e,t,{immediate:n,deep:s,flush:o,once:r,onTrack:i,onTrigger:c}=Q){if(t&&r){const B=t;t=(...fe)=>{B(...fe),J()}}const l=ae,h=B=>s===!0?B:it(B,s===!1?1:void 0);let f,d=!1,p=!1;if(de(e)?(f=()=>e.value,d=pn(e)):xt(e)?(f=()=>h(e),d=!0):F(e)?(p=!0,d=e.some(B=>xt(B)||pn(B)),f=()=>e.map(B=>{if(de(B))return B.value;if(xt(B))return h(B);if(H(B))return Je(B,l,2)})):H(e)?t?f=()=>Je(e,l,2):f=()=>(y&&y(),Ce(e,l,3,[T])):f=be,t&&s){const B=f;f=()=>it(B())}let y,T=B=>{y=j.onStop=()=>{Je(B,l,4),y=j.onStop=void 0}},A;if(An)if(T=be,t?n&&Ce(t,l,3,[f(),p?[]:void 0,T]):f(),o==="sync"){const B=Zi();A=B.__watcherHandles||(B.__watcherHandles=[])}else return be;let I=p?new Array(e.length).fill(nn):nn;const C=()=>{if(!(!j.active||!j.dirty))if(t){const B=j.run();(s||d||(p?B.some((fe,ye)=>Xe(fe,I[ye])):Xe(B,I)))&&(y&&y(),Ce(t,l,3,[B,I===nn?void 0:p&&I[0]===nn?[]:I,T]),I=B)}else j.run()};C.allowRecurse=!!t;let L;o==="sync"?L=C:o==="post"?L=()=>ge(C,l&&l.suspense):(C.pre=!0,l&&(C.id=l.uid),L=()=>Es(C));const j=new gs(f,be,L),V=li(),J=()=>{j.stop(),V&&hs(V.effects,j)};return t?n?C():I=j.run():o==="post"?ge(j.run.bind(j),l&&l.suspense):j.run(),A&&A.push(J),J}function el(e,t,n){const s=this.proxy,o=se(e)?e.includes(".")?gr(s,e):()=>s[e]:e.bind(s,s);let r;H(t)?r=t:(r=t.handler,n=t);const i=Gt(this),c=pr(o,r.bind(s),n);return i(),c}function gr(e,t){const n=t.split(".");return()=>{let s=e;for(let o=0;o<n.length&&s;o++)s=s[n[o]];return s}}function it(e,t,n=0,s){if(!ee(e)||e.__v_skip)return e;if(t&&t>0){if(n>=t)return e;n++}if(s=s||new Set,s.has(e))return e;if(s.add(e),de(e))it(e.value,t,n,s);else if(F(e))for(let o=0;o<e.length;o++)it(e[o],t,n,s);else if(No(e)||bt(e))e.forEach(o=>{it(o,t,n,s)});else if(jo(e))for(const o in e)it(e[o],t,n,s);return e}function tl(e,t){if(me===null)return e;const n=Tn(me)||me.proxy,s=e.dirs||(e.dirs=[]);for(let o=0;o<t.length;o++){let[r,i,c,l=Q]=t[o];r&&(H(r)&&(r={mounted:r,updated:r}),r.deep&&it(i),s.push({dir:r,instance:n,value:i,oldValue:void 0,arg:c,modifiers:l}))}return e}function nt(e,t,n,s){const o=e.dirs,r=t&&t.dirs;for(let i=0;i<o.length;i++){const c=o[i];r&&(c.oldValue=r[i].value);let l=c.dir[s];l&&(ft(),Ce(l,n,8,[e.el,c,e,t]),ht())}}/*! #__NO_SIDE_EFFECTS__ */function Rs(e,t){return H(e)?le({name:e.name},t,{setup:e}):e}const ln=e=>!!e.type.__asyncLoader,mr=e=>e.type.__isKeepAlive;function nl(e,t){vr(e,"a",t)}function sl(e,t){vr(e,"da",t)}function vr(e,t,n=ae){const s=e.__wdc||(e.__wdc=()=>{let o=n;for(;o;){if(o.isDeactivated)return;o=o.parent}return e()});if(Cn(t,s,n),n){let o=n.parent;for(;o&&o.parent;)mr(o.parent.vnode)&&ol(s,t,n,o),o=o.parent}}function ol(e,t,n,s){const o=Cn(t,e,s,!0);br(()=>{hs(s[t],o)},n)}function Cn(e,t,n=ae,s=!1){if(n){const o=n[e]||(n[e]=[]),r=t.__weh||(t.__weh=(...i)=>{if(n.isUnmounted)return;ft();const c=Gt(n),l=Ce(t,n,e,i);return c(),ht(),l});return s?o.unshift(r):o.push(r),r}}const Ue=e=>(t,n=ae)=>(!An||e==="sp")&&Cn(e,(...s)=>t(...s),n),rl=Ue("bm"),_r=Ue("m"),il=Ue("bu"),yr=Ue("u"),ll=Ue("bum"),br=Ue("um"),cl=Ue("sp"),ul=Ue("rtg"),al=Ue("rtc");function fl(e,t=ae){Cn("ec",e,t)}function wr(e,t,n,s){let o;const r=n&&n[s];if(F(e)||se(e)){o=new Array(e.length);for(let i=0,c=e.length;i<c;i++)o[i]=t(e[i],i,void 0,r&&r[i])}else if(typeof e=="number"){o=new Array(e);for(let i=0;i<e;i++)o[i]=t(i+1,i,void 0,r&&r[i])}else if(ee(e))if(e[Symbol.iterator])o=Array.from(e,(i,c)=>t(i,c,void 0,r&&r[c]));else{const i=Object.keys(e);o=new Array(i.length);for(let c=0,l=i.length;c<l;c++){const h=i[c];o[c]=t(e[h],h,c,r&&r[c])}}else o=[];return n&&(n[s]=o),o}const es=e=>e?$r(e)?Tn(e)||e.proxy:es(e.parent):null,Ft=le(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>es(e.parent),$root:e=>es(e.root),$emit:e=>e.emit,$options:e=>Ss(e),$forceUpdate:e=>e.f||(e.f=()=>{e.effect.dirty=!0,Es(e.update)}),$nextTick:e=>e.n||(e.n=cr.bind(e.proxy)),$watch:e=>el.bind(e)}),Fn=(e,t)=>e!==Q&&!e.__isScriptSetup&&K(e,t),hl={get({_:e},t){const{ctx:n,setupState:s,data:o,props:r,accessCache:i,type:c,appContext:l}=e;let h;if(t[0]!=="$"){const y=i[t];if(y!==void 0)switch(y){case 1:return s[t];case 2:return o[t];case 4:return n[t];case 3:return r[t]}else{if(Fn(s,t))return i[t]=1,s[t];if(o!==Q&&K(o,t))return i[t]=2,o[t];if((h=e.propsOptions[0])&&K(h,t))return i[t]=3,r[t];if(n!==Q&&K(n,t))return i[t]=4,n[t];ts&&(i[t]=0)}}const f=Ft[t];let d,p;if(f)return t==="$attrs"&&ve(e,"get",t),f(e);if((d=c.__cssModules)&&(d=d[t]))return d;if(n!==Q&&K(n,t))return i[t]=4,n[t];if(p=l.config.globalProperties,K(p,t))return p[t]},set({_:e},t,n){const{data:s,setupState:o,ctx:r}=e;return Fn(o,t)?(o[t]=n,!0):s!==Q&&K(s,t)?(s[t]=n,!0):K(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(r[t]=n,!0)},has({_:{data:e,setupState:t,accessCache:n,ctx:s,appContext:o,propsOptions:r}},i){let c;return!!n[i]||e!==Q&&K(e,i)||Fn(t,i)||(c=r[0])&&K(c,i)||K(s,i)||K(Ft,i)||K(o.config.globalProperties,i)},defineProperty(e,t,n){return n.get!=null?e._.accessCache[t]=0:K(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};function Ws(e){return F(e)?e.reduce((t,n)=>(t[n]=null,t),{}):e}let ts=!0;function dl(e){const t=Ss(e),n=e.proxy,s=e.ctx;ts=!1,t.beforeCreate&&qs(t.beforeCreate,e,"bc");const{data:o,computed:r,methods:i,watch:c,provide:l,inject:h,created:f,beforeMount:d,mounted:p,beforeUpdate:y,updated:T,activated:A,deactivated:I,beforeDestroy:C,beforeUnmount:L,destroyed:j,unmounted:V,render:J,renderTracked:B,renderTriggered:fe,errorCaptured:ye,serverPrefetch:et,expose:Ae,inheritAttrs:Ve,components:tt,directives:Te,filters:Tt}=t;if(h&&pl(h,s,null),i)for(const G in i){const W=i[G];H(W)&&(s[G]=W.bind(n))}if(o){const G=o.call(n,n);ee(G)&&(e.data=Ze(G))}if(ts=!0,r)for(const G in r){const W=r[G],je=H(W)?W.bind(n,n):H(W.get)?W.get.bind(n,n):be,Ke=!H(W)&&H(W.set)?W.set.bind(n):be,Me=ne({get:je,set:Ke});Object.defineProperty(s,G,{enumerable:!0,configurable:!0,get:()=>Me.value,set:pe=>Me.value=pe})}if(c)for(const G in c)xr(c[G],s,n,G);if(l){const G=H(l)?l.call(n):l;Reflect.ownKeys(G).forEach(W=>{cn(W,G[W])})}f&&qs(f,e,"c");function oe(G,W){F(W)?W.forEach(je=>G(je.bind(n))):W&&G(W.bind(n))}if(oe(rl,d),oe(_r,p),oe(il,y),oe(yr,T),oe(nl,A),oe(sl,I),oe(fl,ye),oe(al,B),oe(ul,fe),oe(ll,L),oe(br,V),oe(cl,et),F(Ae))if(Ae.length){const G=e.exposed||(e.exposed={});Ae.forEach(W=>{Object.defineProperty(G,W,{get:()=>n[W],set:je=>n[W]=je})})}else e.exposed||(e.exposed={});J&&e.render===be&&(e.render=J),Ve!=null&&(e.inheritAttrs=Ve),tt&&(e.components=tt),Te&&(e.directives=Te)}function pl(e,t,n=be){F(e)&&(e=ns(e));for(const s in e){const o=e[s];let r;ee(o)?"default"in o?r=Be(o.from||s,o.default,!0):r=Be(o.from||s):r=Be(o),de(r)?Object.defineProperty(t,s,{enumerable:!0,configurable:!0,get:()=>r.value,set:i=>r.value=i}):t[s]=r}}function qs(e,t,n){Ce(F(e)?e.map(s=>s.bind(t.proxy)):e.bind(t.proxy),t,n)}function xr(e,t,n,s){const o=s.includes(".")?gr(n,s):()=>n[s];if(se(e)){const r=t[e];H(r)&&rn(o,r)}else if(H(e))rn(o,e.bind(n));else if(ee(e))if(F(e))e.forEach(r=>xr(r,t,n,s));else{const r=H(e.handler)?e.handler.bind(n):t[e.handler];H(r)&&rn(o,r,e)}}function Ss(e){const t=e.type,{mixins:n,extends:s}=t,{mixins:o,optionsCache:r,config:{optionMergeStrategies:i}}=e.appContext,c=r.get(t);let l;return c?l=c:!o.length&&!n&&!s?l=t:(l={},o.length&&o.forEach(h=>mn(l,h,i,!0)),mn(l,t,i)),ee(t)&&r.set(t,l),l}function mn(e,t,n,s=!1){const{mixins:o,extends:r}=t;r&&mn(e,r,n,!0),o&&o.forEach(i=>mn(e,i,n,!0));for(const i in t)if(!(s&&i==="expose")){const c=gl[i]||n&&n[i];e[i]=c?c(e[i],t[i]):t[i]}return e}const gl={data:zs,props:Gs,emits:Gs,methods:Nt,computed:Nt,beforeCreate:he,created:he,beforeMount:he,mounted:he,beforeUpdate:he,updated:he,beforeDestroy:he,beforeUnmount:he,destroyed:he,unmounted:he,activated:he,deactivated:he,errorCaptured:he,serverPrefetch:he,components:Nt,directives:Nt,watch:vl,provide:zs,inject:ml};function zs(e,t){return t?e?function(){return le(H(e)?e.call(this,this):e,H(t)?t.call(this,this):t)}:t:e}function ml(e,t){return Nt(ns(e),ns(t))}function ns(e){if(F(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function he(e,t){return e?[...new Set([].concat(e,t))]:t}function Nt(e,t){return e?le(Object.create(null),e,t):t}function Gs(e,t){return e?F(e)&&F(t)?[...new Set([...e,...t])]:le(Object.create(null),Ws(e),Ws(t??{})):t}function vl(e,t){if(!e)return t;if(!t)return e;const n=le(Object.create(null),e);for(const s in t)n[s]=he(e[s],t[s]);return n}function Er(){return{app:null,config:{isNativeTag:Gr,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let _l=0;function yl(e,t){return function(s,o=null){H(s)||(s=le({},s)),o!=null&&!ee(o)&&(o=null);const r=Er(),i=new WeakSet;let c=!1;const l=r.app={_uid:_l++,_component:s,_props:o,_container:null,_context:r,_instance:null,version:Wl,get config(){return r.config},set config(h){},use(h,...f){return i.has(h)||(h&&H(h.install)?(i.add(h),h.install(l,...f)):H(h)&&(i.add(h),h(l,...f))),l},mixin(h){return r.mixins.includes(h)||r.mixins.push(h),l},component(h,f){return f?(r.components[h]=f,l):r.components[h]},directive(h,f){return f?(r.directives[h]=f,l):r.directives[h]},mount(h,f,d){if(!c){const p=ie(s,o);return p.appContext=r,d===!0?d="svg":d===!1&&(d=void 0),f&&t?t(p,h):e(p,h,d),c=!0,l._container=h,h.__vue_app__=l,Tn(p.component)||p.component.proxy}},unmount(){c&&(e(null,l._container),delete l._container.__vue_app__)},provide(h,f){return r.provides[h]=f,l},runWithContext(h){const f=jt;jt=l;try{return h()}finally{jt=f}}};return l}}let jt=null;function cn(e,t){if(ae){let n=ae.provides;const s=ae.parent&&ae.parent.provides;s===n&&(n=ae.provides=Object.create(s)),n[e]=t}}function Be(e,t,n=!1){const s=ae||me;if(s||jt){const o=s?s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides:jt._context.provides;if(o&&e in o)return o[e];if(arguments.length>1)return n&&H(t)?t.call(s&&s.proxy):t}}function bl(e,t,n,s=!1){const o={},r={};fn(r,On,1),e.propsDefaults=Object.create(null),Rr(e,t,o,r);for(const i in e.propsOptions[0])i in o||(o[i]=void 0);n?e.props=s?o:Xo(o):e.type.props?e.props=o:e.props=r,e.attrs=r}function wl(e,t,n,s){const{props:o,attrs:r,vnode:{patchFlag:i}}=e,c=D(o),[l]=e.propsOptions;let h=!1;if((s||i>0)&&!(i&16)){if(i&8){const f=e.vnode.dynamicProps;for(let d=0;d<f.length;d++){let p=f[d];if(Rn(e.emitsOptions,p))continue;const y=t[p];if(l)if(K(r,p))y!==r[p]&&(r[p]=y,h=!0);else{const T=Fe(p);o[T]=ss(l,c,T,y,e,!1)}else y!==r[p]&&(r[p]=y,h=!0)}}}else{Rr(e,t,o,r)&&(h=!0);let f;for(const d in c)(!t||!K(t,d)&&((f=At(d))===d||!K(t,f)))&&(l?n&&(n[d]!==void 0||n[f]!==void 0)&&(o[d]=ss(l,c,d,void 0,e,!0)):delete o[d]);if(r!==c)for(const d in r)(!t||!K(t,d))&&(delete r[d],h=!0)}h&&He(e,"set","$attrs")}function Rr(e,t,n,s){const[o,r]=e.propsOptions;let i=!1,c;if(t)for(let l in t){if(Lt(l))continue;const h=t[l];let f;o&&K(o,f=Fe(l))?!r||!r.includes(f)?n[f]=h:(c||(c={}))[f]=h:Rn(e.emitsOptions,l)||(!(l in s)||h!==s[l])&&(s[l]=h,i=!0)}if(r){const l=D(n),h=c||Q;for(let f=0;f<r.length;f++){const d=r[f];n[d]=ss(o,l,d,h[d],e,!K(h,d))}}return i}function ss(e,t,n,s,o,r){const i=e[n];if(i!=null){const c=K(i,"default");if(c&&s===void 0){const l=i.default;if(i.type!==Function&&!i.skipFactory&&H(l)){const{propsDefaults:h}=o;if(n in h)s=h[n];else{const f=Gt(o);s=h[n]=l.call(null,t),f()}}else s=l}i[0]&&(r&&!c?s=!1:i[1]&&(s===""||s===At(n))&&(s=!0))}return s}function Sr(e,t,n=!1){const s=t.propsCache,o=s.get(e);if(o)return o;const r=e.props,i={},c=[];let l=!1;if(!H(e)){const f=d=>{l=!0;const[p,y]=Sr(d,t,!0);le(i,p),y&&c.push(...y)};!n&&t.mixins.length&&t.mixins.forEach(f),e.extends&&f(e.extends),e.mixins&&e.mixins.forEach(f)}if(!r&&!l)return ee(e)&&s.set(e,yt),yt;if(F(r))for(let f=0;f<r.length;f++){const d=Fe(r[f]);Ys(d)&&(i[d]=Q)}else if(r)for(const f in r){const d=Fe(f);if(Ys(d)){const p=r[f],y=i[d]=F(p)||H(p)?{type:p}:le({},p);if(y){const T=Xs(Boolean,y.type),A=Xs(String,y.type);y[0]=T>-1,y[1]=A<0||T<A,(T>-1||K(y,"default"))&&c.push(d)}}}const h=[i,c];return ee(e)&&s.set(e,h),h}function Ys(e){return e[0]!=="$"&&!Lt(e)}function Qs(e){return e===null?"null":typeof e=="function"?e.name||"":typeof e=="object"&&e.constructor&&e.constructor.name||""}function Js(e,t){return Qs(e)===Qs(t)}function Xs(e,t){return F(t)?t.findIndex(n=>Js(n,e)):H(t)&&Js(t,e)?0:-1}const Cr=e=>e[0]==="_"||e==="$stable",Cs=e=>F(e)?e.map(Ne):[Ne(e)],xl=(e,t,n)=>{if(t._n)return t;const s=Ki((...o)=>Cs(t(...o)),n);return s._c=!1,s},Pr=(e,t,n)=>{const s=e._ctx;for(const o in e){if(Cr(o))continue;const r=e[o];if(H(r))t[o]=xl(o,r,s);else if(r!=null){const i=Cs(r);t[o]=()=>i}}},Or=(e,t)=>{const n=Cs(t);e.slots.default=()=>n},El=(e,t)=>{if(e.vnode.shapeFlag&32){const n=t._;n?(e.slots=D(t),fn(t,"_",n)):Pr(t,e.slots={})}else e.slots={},t&&Or(e,t);fn(e.slots,On,1)},Rl=(e,t,n)=>{const{vnode:s,slots:o}=e;let r=!0,i=Q;if(s.shapeFlag&32){const c=t._;c?n&&c===1?r=!1:(le(o,t),!n&&c===1&&delete o._):(r=!t.$stable,Pr(t,o)),i=t}else t&&(Or(e,t),i={default:1});if(r)for(const c in o)!Cr(c)&&i[c]==null&&delete o[c]};function os(e,t,n,s,o=!1){if(F(e)){e.forEach((p,y)=>os(p,t&&(F(t)?t[y]:t),n,s,o));return}if(ln(s)&&!o)return;const r=s.shapeFlag&4?Tn(s.component)||s.component.proxy:s.el,i=o?null:r,{i:c,r:l}=e,h=t&&t.r,f=c.refs===Q?c.refs={}:c.refs,d=c.setupState;if(h!=null&&h!==l&&(se(h)?(f[h]=null,K(d,h)&&(d[h]=null)):de(h)&&(h.value=null)),H(l))Je(l,c,12,[i,f]);else{const p=se(l),y=de(l);if(p||y){const T=()=>{if(e.f){const A=p?K(d,l)?d[l]:f[l]:l.value;o?F(A)&&hs(A,r):F(A)?A.includes(r)||A.push(r):p?(f[l]=[r],K(d,l)&&(d[l]=f[l])):(l.value=[r],e.k&&(f[e.k]=l.value))}else p?(f[l]=i,K(d,l)&&(d[l]=i)):y&&(l.value=i,e.k&&(f[e.k]=i))};i?(T.id=-1,ge(T,n)):T()}}}const ge=Ji;function Sl(e){return Cl(e)}function Cl(e,t){const n=ko();n.__VUE__=!0;const{insert:s,remove:o,patchProp:r,createElement:i,createText:c,createComment:l,setText:h,setElementText:f,parentNode:d,nextSibling:p,setScopeId:y=be,insertStaticContent:T}=e,A=(u,a,g,_=null,m=null,x=null,S=void 0,w=null,E=!!a.dynamicChildren)=>{if(u===a)return;u&&!It(u,a)&&(_=v(u),pe(u,m,x,!0),u=null),a.patchFlag===-2&&(E=!1,a.dynamicChildren=null);const{type:b,ref:O,shapeFlag:N}=a;switch(b){case Pn:I(u,a,g,_);break;case at:C(u,a,g,_);break;case kn:u==null&&L(a,g,_,S);break;case Re:tt(u,a,g,_,m,x,S,w,E);break;default:N&1?J(u,a,g,_,m,x,S,w,E):N&6?Te(u,a,g,_,m,x,S,w,E):(N&64||N&128)&&b.process(u,a,g,_,m,x,S,w,E,M)}O!=null&&m&&os(O,u&&u.ref,x,a||u,!a)},I=(u,a,g,_)=>{if(u==null)s(a.el=c(a.children),g,_);else{const m=a.el=u.el;a.children!==u.children&&h(m,a.children)}},C=(u,a,g,_)=>{u==null?s(a.el=l(a.children||""),g,_):a.el=u.el},L=(u,a,g,_)=>{[u.el,u.anchor]=T(u.children,a,g,_,u.el,u.anchor)},j=({el:u,anchor:a},g,_)=>{let m;for(;u&&u!==a;)m=p(u),s(u,g,_),u=m;s(a,g,_)},V=({el:u,anchor:a})=>{let g;for(;u&&u!==a;)g=p(u),o(u),u=g;o(a)},J=(u,a,g,_,m,x,S,w,E)=>{a.type==="svg"?S="svg":a.type==="math"&&(S="mathml"),u==null?B(a,g,_,m,x,S,w,E):et(u,a,m,x,S,w,E)},B=(u,a,g,_,m,x,S,w)=>{let E,b;const{props:O,shapeFlag:N,transition:$,dirs:k}=u;if(E=u.el=i(u.type,x,O&&O.is,O),N&8?f(E,u.children):N&16&&ye(u.children,E,null,_,m,jn(u,x),S,w),k&&nt(u,null,_,"created"),fe(E,u,u.scopeId,S,_),O){for(const Y in O)Y!=="value"&&!Lt(Y)&&r(E,Y,null,O[Y],x,u.children,_,m,ce);"value"in O&&r(E,"value",null,O.value,x),(b=O.onVnodeBeforeMount)&&$e(b,_,u)}k&&nt(u,null,_,"beforeMount");const U=Pl(m,$);U&&$.beforeEnter(E),s(E,a,g),((b=O&&O.onVnodeMounted)||U||k)&&ge(()=>{b&&$e(b,_,u),U&&$.enter(E),k&&nt(u,null,_,"mounted")},m)},fe=(u,a,g,_,m)=>{if(g&&y(u,g),_)for(let x=0;x<_.length;x++)y(u,_[x]);if(m){let x=m.subTree;if(a===x){const S=m.vnode;fe(u,S,S.scopeId,S.slotScopeIds,m.parent)}}},ye=(u,a,g,_,m,x,S,w,E=0)=>{for(let b=E;b<u.length;b++){const O=u[b]=w?ze(u[b]):Ne(u[b]);A(null,O,a,g,_,m,x,S,w)}},et=(u,a,g,_,m,x,S)=>{const w=a.el=u.el;let{patchFlag:E,dynamicChildren:b,dirs:O}=a;E|=u.patchFlag&16;const N=u.props||Q,$=a.props||Q;let k;if(g&&st(g,!1),(k=$.onVnodeBeforeUpdate)&&$e(k,g,a,u),O&&nt(a,u,g,"beforeUpdate"),g&&st(g,!0),b?Ae(u.dynamicChildren,b,w,g,_,jn(a,m),x):S||W(u,a,w,null,g,_,jn(a,m),x,!1),E>0){if(E&16)Ve(w,a,N,$,g,_,m);else if(E&2&&N.class!==$.class&&r(w,"class",null,$.class,m),E&4&&r(w,"style",N.style,$.style,m),E&8){const U=a.dynamicProps;for(let Y=0;Y<U.length;Y++){const Z=U[Y],re=N[Z],xe=$[Z];(xe!==re||Z==="value")&&r(w,Z,re,xe,m,u.children,g,_,ce)}}E&1&&u.children!==a.children&&f(w,a.children)}else!S&&b==null&&Ve(w,a,N,$,g,_,m);((k=$.onVnodeUpdated)||O)&&ge(()=>{k&&$e(k,g,a,u),O&&nt(a,u,g,"updated")},_)},Ae=(u,a,g,_,m,x,S)=>{for(let w=0;w<a.length;w++){const E=u[w],b=a[w],O=E.el&&(E.type===Re||!It(E,b)||E.shapeFlag&70)?d(E.el):g;A(E,b,O,null,_,m,x,S,!0)}},Ve=(u,a,g,_,m,x,S)=>{if(g!==_){if(g!==Q)for(const w in g)!Lt(w)&&!(w in _)&&r(u,w,g[w],null,S,a.children,m,x,ce);for(const w in _){if(Lt(w))continue;const E=_[w],b=g[w];E!==b&&w!=="value"&&r(u,w,b,E,S,a.children,m,x,ce)}"value"in _&&r(u,"value",g.value,_.value,S)}},tt=(u,a,g,_,m,x,S,w,E)=>{const b=a.el=u?u.el:c(""),O=a.anchor=u?u.anchor:c("");let{patchFlag:N,dynamicChildren:$,slotScopeIds:k}=a;k&&(w=w?w.concat(k):k),u==null?(s(b,g,_),s(O,g,_),ye(a.children||[],g,O,m,x,S,w,E)):N>0&&N&64&&$&&u.dynamicChildren?(Ae(u.dynamicChildren,$,g,m,x,S,w),(a.key!=null||m&&a===m.subTree)&&Ar(u,a,!0)):W(u,a,g,O,m,x,S,w,E)},Te=(u,a,g,_,m,x,S,w,E)=>{a.slotScopeIds=w,u==null?a.shapeFlag&512?m.ctx.activate(a,g,_,S,E):Tt(a,g,_,m,x,S,E):dt(u,a,E)},Tt=(u,a,g,_,m,x,S)=>{const w=u.component=kl(u,_,m);if(mr(u)&&(w.ctx.renderer=M),Hl(w),w.asyncDep){if(m&&m.registerDep(w,oe),!u.el){const E=w.subTree=ie(at);C(null,E,a,g)}}else oe(w,u,a,g,m,x,S)},dt=(u,a,g)=>{const _=a.component=u.component;if(qi(u,a,g))if(_.asyncDep&&!_.asyncResolved){G(_,a,g);return}else _.next=a,ji(_.update),_.effect.dirty=!0,_.update();else a.el=u.el,_.vnode=a},oe=(u,a,g,_,m,x,S)=>{const w=()=>{if(u.isMounted){let{next:O,bu:N,u:$,parent:k,vnode:U}=u;{const mt=Tr(u);if(mt){O&&(O.el=U.el,G(u,O,S)),mt.asyncDep.then(()=>{u.isUnmounted||w()});return}}let Y=O,Z;st(u,!1),O?(O.el=U.el,G(u,O,S)):O=U,N&&sn(N),(Z=O.props&&O.props.onVnodeBeforeUpdate)&&$e(Z,k,O,U),st(u,!0);const re=Ln(u),xe=u.subTree;u.subTree=re,A(xe,re,d(xe.el),v(xe),u,m,x),O.el=re.el,Y===null&&zi(u,re.el),$&&ge($,m),(Z=O.props&&O.props.onVnodeUpdated)&&ge(()=>$e(Z,k,O,U),m)}else{let O;const{el:N,props:$}=a,{bm:k,m:U,parent:Y}=u,Z=ln(a);if(st(u,!1),k&&sn(k),!Z&&(O=$&&$.onVnodeBeforeMount)&&$e(O,Y,a),st(u,!0),N&&X){const re=()=>{u.subTree=Ln(u),X(N,u.subTree,u,m,null)};Z?a.type.__asyncLoader().then(()=>!u.isUnmounted&&re()):re()}else{const re=u.subTree=Ln(u);A(null,re,g,_,u,m,x),a.el=re.el}if(U&&ge(U,m),!Z&&(O=$&&$.onVnodeMounted)){const re=a;ge(()=>$e(O,Y,re),m)}(a.shapeFlag&256||Y&&ln(Y.vnode)&&Y.vnode.shapeFlag&256)&&u.a&&ge(u.a,m),u.isMounted=!0,a=g=_=null}},E=u.effect=new gs(w,be,()=>Es(b),u.scope),b=u.update=()=>{E.dirty&&E.run()};b.id=u.uid,st(u,!0),b()},G=(u,a,g)=>{a.component=u;const _=u.vnode.props;u.vnode=a,u.next=null,wl(u,a.props,_,g),Rl(u,a.children,g),ft(),Vs(u),ht()},W=(u,a,g,_,m,x,S,w,E=!1)=>{const b=u&&u.children,O=u?u.shapeFlag:0,N=a.children,{patchFlag:$,shapeFlag:k}=a;if($>0){if($&128){Ke(b,N,g,_,m,x,S,w,E);return}else if($&256){je(b,N,g,_,m,x,S,w,E);return}}k&8?(O&16&&ce(b,m,x),N!==b&&f(g,N)):O&16?k&16?Ke(b,N,g,_,m,x,S,w,E):ce(b,m,x,!0):(O&8&&f(g,""),k&16&&ye(N,g,_,m,x,S,w,E))},je=(u,a,g,_,m,x,S,w,E)=>{u=u||yt,a=a||yt;const b=u.length,O=a.length,N=Math.min(b,O);let $;for($=0;$<N;$++){const k=a[$]=E?ze(a[$]):Ne(a[$]);A(u[$],k,g,null,m,x,S,w,E)}b>O?ce(u,m,x,!0,!1,N):ye(a,g,_,m,x,S,w,E,N)},Ke=(u,a,g,_,m,x,S,w,E)=>{let b=0;const O=a.length;let N=u.length-1,$=O-1;for(;b<=N&&b<=$;){const k=u[b],U=a[b]=E?ze(a[b]):Ne(a[b]);if(It(k,U))A(k,U,g,null,m,x,S,w,E);else break;b++}for(;b<=N&&b<=$;){const k=u[N],U=a[$]=E?ze(a[$]):Ne(a[$]);if(It(k,U))A(k,U,g,null,m,x,S,w,E);else break;N--,$--}if(b>N){if(b<=$){const k=$+1,U=k<O?a[k].el:_;for(;b<=$;)A(null,a[b]=E?ze(a[b]):Ne(a[b]),g,U,m,x,S,w,E),b++}}else if(b>$)for(;b<=N;)pe(u[b],m,x,!0),b++;else{const k=b,U=b,Y=new Map;for(b=U;b<=$;b++){const _e=a[b]=E?ze(a[b]):Ne(a[b]);_e.key!=null&&Y.set(_e.key,b)}let Z,re=0;const xe=$-U+1;let mt=!1,Ms=0;const Mt=new Array(xe);for(b=0;b<xe;b++)Mt[b]=0;for(b=k;b<=N;b++){const _e=u[b];if(re>=xe){pe(_e,m,x,!0);continue}let Ie;if(_e.key!=null)Ie=Y.get(_e.key);else for(Z=U;Z<=$;Z++)if(Mt[Z-U]===0&&It(_e,a[Z])){Ie=Z;break}Ie===void 0?pe(_e,m,x,!0):(Mt[Ie-U]=b+1,Ie>=Ms?Ms=Ie:mt=!0,A(_e,a[Ie],g,null,m,x,S,w,E),re++)}const Is=mt?Ol(Mt):yt;for(Z=Is.length-1,b=xe-1;b>=0;b--){const _e=U+b,Ie=a[_e],$s=_e+1<O?a[_e+1].el:_;Mt[b]===0?A(null,Ie,g,$s,m,x,S,w,E):mt&&(Z<0||b!==Is[Z]?Me(Ie,g,$s,2):Z--)}}},Me=(u,a,g,_,m=null)=>{const{el:x,type:S,transition:w,children:E,shapeFlag:b}=u;if(b&6){Me(u.component.subTree,a,g,_);return}if(b&128){u.suspense.move(a,g,_);return}if(b&64){S.move(u,a,g,M);return}if(S===Re){s(x,a,g);for(let N=0;N<E.length;N++)Me(E[N],a,g,_);s(u.anchor,a,g);return}if(S===kn){j(u,a,g);return}if(_!==2&&b&1&&w)if(_===0)w.beforeEnter(x),s(x,a,g),ge(()=>w.enter(x),m);else{const{leave:N,delayLeave:$,afterLeave:k}=w,U=()=>s(x,a,g),Y=()=>{N(x,()=>{U(),k&&k()})};$?$(x,U,Y):Y()}else s(x,a,g)},pe=(u,a,g,_=!1,m=!1)=>{const{type:x,props:S,ref:w,children:E,dynamicChildren:b,shapeFlag:O,patchFlag:N,dirs:$}=u;if(w!=null&&os(w,null,g,u,!0),O&256){a.ctx.deactivate(u);return}const k=O&1&&$,U=!ln(u);let Y;if(U&&(Y=S&&S.onVnodeBeforeUnmount)&&$e(Y,a,u),O&6)Qt(u.component,g,_);else{if(O&128){u.suspense.unmount(g,_);return}k&&nt(u,null,a,"beforeUnmount"),O&64?u.type.remove(u,a,g,m,M,_):b&&(x!==Re||N>0&&N&64)?ce(b,a,g,!1,!0):(x===Re&&N&384||!m&&O&16)&&ce(E,a,g),_&&pt(u)}(U&&(Y=S&&S.onVnodeUnmounted)||k)&&ge(()=>{Y&&$e(Y,a,u),k&&nt(u,null,a,"unmounted")},g)},pt=u=>{const{type:a,el:g,anchor:_,transition:m}=u;if(a===Re){gt(g,_);return}if(a===kn){V(u);return}const x=()=>{o(g),m&&!m.persisted&&m.afterLeave&&m.afterLeave()};if(u.shapeFlag&1&&m&&!m.persisted){const{leave:S,delayLeave:w}=m,E=()=>S(g,x);w?w(u.el,x,E):E()}else x()},gt=(u,a)=>{let g;for(;u!==a;)g=p(u),o(u),u=g;o(a)},Qt=(u,a,g)=>{const{bum:_,scope:m,update:x,subTree:S,um:w}=u;_&&sn(_),m.stop(),x&&(x.active=!1,pe(S,u,a,g)),w&&ge(w,a),ge(()=>{u.isUnmounted=!0},a),a&&a.pendingBranch&&!a.isUnmounted&&u.asyncDep&&!u.asyncResolved&&u.suspenseId===a.pendingId&&(a.deps--,a.deps===0&&a.resolve())},ce=(u,a,g,_=!1,m=!1,x=0)=>{for(let S=x;S<u.length;S++)pe(u[S],a,g,_,m)},v=u=>u.shapeFlag&6?v(u.component.subTree):u.shapeFlag&128?u.suspense.next():p(u.anchor||u.el);let P=!1;const R=(u,a,g)=>{u==null?a._vnode&&pe(a._vnode,null,null,!0):A(a._vnode||null,u,a,null,null,null,g),P||(P=!0,Vs(),ar(),P=!1),a._vnode=u},M={p:A,um:pe,m:Me,r:pt,mt:Tt,mc:ye,pc:W,pbc:Ae,n:v,o:e};let q,X;return t&&([q,X]=t(M)),{render:R,hydrate:q,createApp:yl(R,q)}}function jn({type:e,props:t},n){return n==="svg"&&e==="foreignObject"||n==="mathml"&&e==="annotation-xml"&&t&&t.encoding&&t.encoding.includes("html")?void 0:n}function st({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function Pl(e,t){return(!e||e&&!e.pendingBranch)&&t&&!t.persisted}function Ar(e,t,n=!1){const s=e.children,o=t.children;if(F(s)&&F(o))for(let r=0;r<s.length;r++){const i=s[r];let c=o[r];c.shapeFlag&1&&!c.dynamicChildren&&((c.patchFlag<=0||c.patchFlag===32)&&(c=o[r]=ze(o[r]),c.el=i.el),n||Ar(i,c)),c.type===Pn&&(c.el=i.el)}}function Ol(e){const t=e.slice(),n=[0];let s,o,r,i,c;const l=e.length;for(s=0;s<l;s++){const h=e[s];if(h!==0){if(o=n[n.length-1],e[o]<h){t[s]=o,n.push(s);continue}for(r=0,i=n.length-1;r<i;)c=r+i>>1,e[n[c]]<h?r=c+1:i=c;h<e[n[r]]&&(r>0&&(t[s]=n[r-1]),n[r]=s)}}for(r=n.length,i=n[r-1];r-- >0;)n[r]=i,i=t[i];return n}function Tr(e){const t=e.subTree.component;if(t)return t.asyncDep&&!t.asyncResolved?t:Tr(t)}const Al=e=>e.__isTeleport,Re=Symbol.for("v-fgt"),Pn=Symbol.for("v-txt"),at=Symbol.for("v-cmt"),kn=Symbol.for("v-stc"),kt=[];let Se=null;function we(e=!1){kt.push(Se=e?null:[])}function Tl(){kt.pop(),Se=kt[kt.length-1]||null}let Wt=1;function Zs(e){Wt+=e}function Mr(e){return e.dynamicChildren=Wt>0?Se||yt:null,Tl(),Wt>0&&Se&&Se.push(e),e}function Pe(e,t,n,s,o,r){return Mr(te(e,t,n,s,o,r,!0))}function Ml(e,t,n,s,o){return Mr(ie(e,t,n,s,o,!0))}function rs(e){return e?e.__v_isVNode===!0:!1}function It(e,t){return e.type===t.type&&e.key===t.key}const On="__vInternal",Ir=({key:e})=>e??null,un=({ref:e,ref_key:t,ref_for:n})=>(typeof e=="number"&&(e=""+e),e!=null?se(e)||de(e)||H(e)?{i:me,r:e,k:t,f:!!n}:e:null);function te(e,t=null,n=null,s=0,o=null,r=e===Re?0:1,i=!1,c=!1){const l={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Ir(t),ref:t&&un(t),scopeId:Sn,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:r,patchFlag:s,dynamicProps:o,dynamicChildren:null,appContext:null,ctx:me};return c?(Ps(l,n),r&128&&e.normalize(l)):n&&(l.shapeFlag|=se(n)?8:16),Wt>0&&!i&&Se&&(l.patchFlag>0||r&6)&&l.patchFlag!==32&&Se.push(l),l}const ie=Il;function Il(e,t=null,n=null,s=0,o=null,r=!1){if((!e||e===Gi)&&(e=at),rs(e)){const c=St(e,t,!0);return n&&Ps(c,n),Wt>0&&!r&&Se&&(c.shapeFlag&6?Se[Se.indexOf(e)]=c:Se.push(c)),c.patchFlag|=-2,c}if(Dl(e)&&(e=e.__vccOpts),t){t=$l(t);let{class:c,style:l}=t;c&&!se(c)&&(t.class=wt(c)),ee(l)&&(er(l)&&!F(l)&&(l=le({},l)),t.style=ps(l))}const i=se(e)?1:Qi(e)?128:Al(e)?64:ee(e)?4:H(e)?2:0;return te(e,t,n,s,o,i,r,!0)}function $l(e){return e?er(e)||On in e?le({},e):e:null}function St(e,t,n=!1){const{props:s,ref:o,patchFlag:r,children:i}=e,c=t?Ll(s||{},t):s;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:c,key:c&&Ir(c),ref:t&&t.ref?n&&o?F(o)?o.concat(un(t)):[o,un(t)]:un(t):o,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:i,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==Re?r===-1?16:r|16:r,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&St(e.ssContent),ssFallback:e.ssFallback&&St(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function Nl(e=" ",t=0){return ie(Pn,null,e,t)}function eo(e="",t=!1){return t?(we(),Ml(at,null,e)):ie(at,null,e)}function Ne(e){return e==null||typeof e=="boolean"?ie(at):F(e)?ie(Re,null,e.slice()):typeof e=="object"?ze(e):ie(Pn,null,String(e))}function ze(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:St(e)}function Ps(e,t){let n=0;const{shapeFlag:s}=e;if(t==null)t=null;else if(F(t))n=16;else if(typeof t=="object")if(s&65){const o=t.default;o&&(o._c&&(o._d=!1),Ps(e,o()),o._c&&(o._d=!0));return}else{n=32;const o=t._;!o&&!(On in t)?t._ctx=me:o===3&&me&&(me.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else H(t)?(t={default:t,_ctx:me},n=32):(t=String(t),s&64?(n=16,t=[Nl(t)]):n=8);e.children=t,e.shapeFlag|=n}function Ll(...e){const t={};for(let n=0;n<e.length;n++){const s=e[n];for(const o in s)if(o==="class")t.class!==s.class&&(t.class=wt([t.class,s.class]));else if(o==="style")t.style=ps([t.style,s.style]);else if(_n(o)){const r=t[o],i=s[o];i&&r!==i&&!(F(r)&&r.includes(i))&&(t[o]=r?[].concat(r,i):i)}else o!==""&&(t[o]=s[o])}return t}function $e(e,t,n,s=null){Ce(e,t,7,[n,s])}const Fl=Er();let jl=0;function kl(e,t,n){const s=e.type,o=(t?t.appContext:e.appContext)||Fl,r={uid:jl++,vnode:e,type:s,parent:t,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new ri(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Sr(s,o),emitsOptions:hr(s,o),emit:null,emitted:null,propsDefaults:Q,inheritAttrs:s.inheritAttrs,ctx:Q,data:Q,props:Q,attrs:Q,slots:Q,refs:Q,setupState:Q,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return r.ctx={_:r},r.root=t?t.root:r,r.emit=Bi.bind(null,r),e.ce&&e.ce(r),r}let ae=null,vn,is;{const e=ko(),t=(n,s)=>{let o;return(o=e[n])||(o=e[n]=[]),o.push(s),r=>{o.length>1?o.forEach(i=>i(r)):o[0](r)}};vn=t("__VUE_INSTANCE_SETTERS__",n=>ae=n),is=t("__VUE_SSR_SETTERS__",n=>An=n)}const Gt=e=>{const t=ae;return vn(e),e.scope.on(),()=>{e.scope.off(),vn(t)}},to=()=>{ae&&ae.scope.off(),vn(null)};function $r(e){return e.vnode.shapeFlag&4}let An=!1;function Hl(e,t=!1){t&&is(t);const{props:n,children:s}=e.vnode,o=$r(e);bl(e,n,o,t),El(e,s);const r=o?Bl(e,t):void 0;return t&&is(!1),r}function Bl(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=tr(new Proxy(e.ctx,hl));const{setup:s}=n;if(s){const o=e.setupContext=s.length>1?Vl(e):null,r=Gt(e);ft();const i=Je(s,e,0,[e.props,o]);if(ht(),r(),Lo(i)){if(i.then(to,to),t)return i.then(c=>{no(e,c,t)}).catch(c=>{En(c,e,0)});e.asyncDep=i}else no(e,i,t)}else Nr(e,t)}function no(e,t,n){H(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:ee(t)&&(e.setupState=ir(t)),Nr(e,n)}let so;function Nr(e,t,n){const s=e.type;if(!e.render){if(!t&&so&&!s.render){const o=s.template||Ss(e).template;if(o){const{isCustomElement:r,compilerOptions:i}=e.appContext.config,{delimiters:c,compilerOptions:l}=s,h=le(le({isCustomElement:r,delimiters:c},i),l);s.render=so(o,h)}}e.render=s.render||be}{const o=Gt(e);ft();try{dl(e)}finally{ht(),o()}}}function Ul(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(t,n){return ve(e,"get","$attrs"),t[n]}}))}function Vl(e){const t=n=>{e.exposed=n||{}};return{get attrs(){return Ul(e)},slots:e.slots,emit:e.emit,expose:t}}function Tn(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(ir(tr(e.exposed)),{get(t,n){if(n in t)return t[n];if(n in Ft)return Ft[n](e)},has(t,n){return n in t||n in Ft}}))}function Kl(e,t=!0){return H(e)?e.displayName||e.name:e.name||t&&e.__name}function Dl(e){return H(e)&&"__vccOpts"in e}const ne=(e,t)=>Oi(e,t,An);function Ht(e,t,n){const s=arguments.length;return s===2?ee(t)&&!F(t)?rs(t)?ie(e,null,[t]):ie(e,t):ie(e,null,t):(s>3?n=Array.prototype.slice.call(arguments,2):s===3&&rs(n)&&(n=[n]),ie(e,t,n))}const Wl="3.4.21";/**
* @vue/runtime-dom v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const ql="http://www.w3.org/2000/svg",zl="http://www.w3.org/1998/Math/MathML",Ge=typeof document<"u"?document:null,oo=Ge&&Ge.createElement("template"),Gl={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,s)=>{const o=t==="svg"?Ge.createElementNS(ql,e):t==="mathml"?Ge.createElementNS(zl,e):Ge.createElement(e,n?{is:n}:void 0);return e==="select"&&s&&s.multiple!=null&&o.setAttribute("multiple",s.multiple),o},createText:e=>Ge.createTextNode(e),createComment:e=>Ge.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Ge.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,n,s,o,r){const i=n?n.previousSibling:t.lastChild;if(o&&(o===r||o.nextSibling))for(;t.insertBefore(o.cloneNode(!0),n),!(o===r||!(o=o.nextSibling)););else{oo.innerHTML=s==="svg"?`<svg>${e}</svg>`:s==="mathml"?`<math>${e}</math>`:e;const c=oo.content;if(s==="svg"||s==="mathml"){const l=c.firstChild;for(;l.firstChild;)c.appendChild(l.firstChild);c.removeChild(l)}t.insertBefore(c,n)}return[i?i.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}},Yl=Symbol("_vtc");function Ql(e,t,n){const s=e[Yl];s&&(t=(t?[t,...s]:[...s]).join(" ")),t==null?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}const ro=Symbol("_vod"),Jl=Symbol("_vsh"),Xl=Symbol(""),Zl=/(^|;)\s*display\s*:/;function ec(e,t,n){const s=e.style,o=se(n);let r=!1;if(n&&!o){if(t)if(se(t))for(const i of t.split(";")){const c=i.slice(0,i.indexOf(":")).trim();n[c]==null&&an(s,c,"")}else for(const i in t)n[i]==null&&an(s,i,"");for(const i in n)i==="display"&&(r=!0),an(s,i,n[i])}else if(o){if(t!==n){const i=s[Xl];i&&(n+=";"+i),s.cssText=n,r=Zl.test(n)}}else t&&e.removeAttribute("style");ro in e&&(e[ro]=r?s.display:"",e[Jl]&&(s.display="none"))}const io=/\s*!important$/;function an(e,t,n){if(F(n))n.forEach(s=>an(e,t,s));else if(n==null&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const s=tc(e,t);io.test(n)?e.setProperty(At(s),n.replace(io,""),"important"):e[s]=n}}const lo=["Webkit","Moz","ms"],Hn={};function tc(e,t){const n=Hn[t];if(n)return n;let s=Fe(t);if(s!=="filter"&&s in e)return Hn[t]=s;s=wn(s);for(let o=0;o<lo.length;o++){const r=lo[o]+s;if(r in e)return Hn[t]=r}return t}const co="http://www.w3.org/1999/xlink";function nc(e,t,n,s,o){if(s&&t.startsWith("xlink:"))n==null?e.removeAttributeNS(co,t.slice(6,t.length)):e.setAttributeNS(co,t,n);else{const r=oi(t);n==null||r&&!Ho(n)?e.removeAttribute(t):e.setAttribute(t,r?"":n)}}function sc(e,t,n,s,o,r,i){if(t==="innerHTML"||t==="textContent"){s&&i(s,o,r),e[t]=n??"";return}const c=e.tagName;if(t==="value"&&c!=="PROGRESS"&&!c.includes("-")){const h=c==="OPTION"?e.getAttribute("value")||"":e.value,f=n??"";(h!==f||!("_value"in e))&&(e.value=f),n==null&&e.removeAttribute(t),e._value=n;return}let l=!1;if(n===""||n==null){const h=typeof e[t];h==="boolean"?n=Ho(n):n==null&&h==="string"?(n="",l=!0):h==="number"&&(n=0,l=!0)}try{e[t]=n}catch{}l&&e.removeAttribute(t)}function vt(e,t,n,s){e.addEventListener(t,n,s)}function oc(e,t,n,s){e.removeEventListener(t,n,s)}const uo=Symbol("_vei");function rc(e,t,n,s,o=null){const r=e[uo]||(e[uo]={}),i=r[t];if(s&&i)i.value=s;else{const[c,l]=ic(t);if(s){const h=r[t]=uc(s,o);vt(e,c,h,l)}else i&&(oc(e,c,i,l),r[t]=void 0)}}const ao=/(?:Once|Passive|Capture)$/;function ic(e){let t;if(ao.test(e)){t={};let s;for(;s=e.match(ao);)e=e.slice(0,e.length-s[0].length),t[s[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):At(e.slice(2)),t]}let Bn=0;const lc=Promise.resolve(),cc=()=>Bn||(lc.then(()=>Bn=0),Bn=Date.now());function uc(e,t){const n=s=>{if(!s._vts)s._vts=Date.now();else if(s._vts<=n.attached)return;Ce(ac(s,n.value),t,5,[s])};return n.value=e,n.attached=cc(),n}function ac(e,t){if(F(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map(s=>o=>!o._stopped&&s&&s(o))}else return t}const fo=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,fc=(e,t,n,s,o,r,i,c,l)=>{const h=o==="svg";t==="class"?Ql(e,s,h):t==="style"?ec(e,n,s):_n(t)?fs(t)||rc(e,t,n,s,i):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):hc(e,t,s,h))?sc(e,t,s,r,i,c,l):(t==="true-value"?e._trueValue=s:t==="false-value"&&(e._falseValue=s),nc(e,t,s,h))};function hc(e,t,n,s){if(s)return!!(t==="innerHTML"||t==="textContent"||t in e&&fo(t)&&H(n));if(t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA")return!1;if(t==="width"||t==="height"){const o=e.tagName;if(o==="IMG"||o==="VIDEO"||o==="CANVAS"||o==="SOURCE")return!1}return fo(t)&&se(n)?!1:t in e}const ho=e=>{const t=e.props["onUpdate:modelValue"]||!1;return F(t)?n=>sn(t,n):t};function dc(e){e.target.composing=!0}function po(e){const t=e.target;t.composing&&(t.composing=!1,t.dispatchEvent(new Event("input")))}const Un=Symbol("_assign"),pc={created(e,{modifiers:{lazy:t,trim:n,number:s}},o){e[Un]=ho(o);const r=s||o.props&&o.props.type==="number";vt(e,t?"change":"input",i=>{if(i.target.composing)return;let c=e.value;n&&(c=c.trim()),r&&(c=Gn(c)),e[Un](c)}),n&&vt(e,"change",()=>{e.value=e.value.trim()}),t||(vt(e,"compositionstart",dc),vt(e,"compositionend",po),vt(e,"change",po))},mounted(e,{value:t}){e.value=t??""},beforeUpdate(e,{value:t,modifiers:{lazy:n,trim:s,number:o}},r){if(e[Un]=ho(r),e.composing)return;const i=o||e.type==="number"?Gn(e.value):e.value,c=t??"";i!==c&&(document.activeElement===e&&e.type!=="range"&&(n||s&&e.value.trim()===c)||(e.value=c))}},gc=le({patchProp:fc},Gl);let go;function mc(){return go||(go=Sl(gc))}const vc=(...e)=>{const t=mc().createApp(...e),{mount:n}=t;return t.mount=s=>{const o=yc(s);if(!o)return;const r=t._component;!H(r)&&!r.render&&!r.template&&(r.template=o.innerHTML),o.innerHTML="";const i=n(o,!1,_c(o));return o instanceof Element&&(o.removeAttribute("v-cloak"),o.setAttribute("data-v-app","")),i},t};function _c(e){if(e instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&e instanceof MathMLElement)return"mathml"}function yc(e){return se(e)?document.querySelector(e):e}/*!
  * vue-router v4.3.0
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const _t=typeof document<"u";function bc(e){return e.__esModule||e[Symbol.toStringTag]==="Module"}const z=Object.assign;function Vn(e,t){const n={};for(const s in t){const o=t[s];n[s]=Oe(o)?o.map(e):e(o)}return n}const Bt=()=>{},Oe=Array.isArray,Lr=/#/g,wc=/&/g,xc=/\//g,Ec=/=/g,Rc=/\?/g,Fr=/\+/g,Sc=/%5B/g,Cc=/%5D/g,jr=/%5E/g,Pc=/%60/g,kr=/%7B/g,Oc=/%7C/g,Hr=/%7D/g,Ac=/%20/g;function Os(e){return encodeURI(""+e).replace(Oc,"|").replace(Sc,"[").replace(Cc,"]")}function Tc(e){return Os(e).replace(kr,"{").replace(Hr,"}").replace(jr,"^")}function ls(e){return Os(e).replace(Fr,"%2B").replace(Ac,"+").replace(Lr,"%23").replace(wc,"%26").replace(Pc,"`").replace(kr,"{").replace(Hr,"}").replace(jr,"^")}function Mc(e){return ls(e).replace(Ec,"%3D")}function Ic(e){return Os(e).replace(Lr,"%23").replace(Rc,"%3F")}function $c(e){return e==null?"":Ic(e).replace(xc,"%2F")}function qt(e){try{return decodeURIComponent(""+e)}catch{}return""+e}const Nc=/\/$/,Lc=e=>e.replace(Nc,"");function Kn(e,t,n="/"){let s,o={},r="",i="";const c=t.indexOf("#");let l=t.indexOf("?");return c<l&&c>=0&&(l=-1),l>-1&&(s=t.slice(0,l),r=t.slice(l+1,c>-1?c:t.length),o=e(r)),c>-1&&(s=s||t.slice(0,c),i=t.slice(c,t.length)),s=Hc(s??t,n),{fullPath:s+(r&&"?")+r+i,path:s,query:o,hash:qt(i)}}function Fc(e,t){const n=t.query?e(t.query):"";return t.path+(n&&"?")+n+(t.hash||"")}function mo(e,t){return!t||!e.toLowerCase().startsWith(t.toLowerCase())?e:e.slice(t.length)||"/"}function jc(e,t,n){const s=t.matched.length-1,o=n.matched.length-1;return s>-1&&s===o&&Ct(t.matched[s],n.matched[o])&&Br(t.params,n.params)&&e(t.query)===e(n.query)&&t.hash===n.hash}function Ct(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function Br(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const n in e)if(!kc(e[n],t[n]))return!1;return!0}function kc(e,t){return Oe(e)?vo(e,t):Oe(t)?vo(t,e):e===t}function vo(e,t){return Oe(t)?e.length===t.length&&e.every((n,s)=>n===t[s]):e.length===1&&e[0]===t}function Hc(e,t){if(e.startsWith("/"))return e;if(!e)return t;const n=t.split("/"),s=e.split("/"),o=s[s.length-1];(o===".."||o===".")&&s.push("");let r=n.length-1,i,c;for(i=0;i<s.length;i++)if(c=s[i],c!==".")if(c==="..")r>1&&r--;else break;return n.slice(0,r).join("/")+"/"+s.slice(i).join("/")}var zt;(function(e){e.pop="pop",e.push="push"})(zt||(zt={}));var Ut;(function(e){e.back="back",e.forward="forward",e.unknown=""})(Ut||(Ut={}));function Bc(e){if(!e)if(_t){const t=document.querySelector("base");e=t&&t.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return e[0]!=="/"&&e[0]!=="#"&&(e="/"+e),Lc(e)}const Uc=/^[^#]+#/;function Vc(e,t){return e.replace(Uc,"#")+t}function Kc(e,t){const n=document.documentElement.getBoundingClientRect(),s=e.getBoundingClientRect();return{behavior:t.behavior,left:s.left-n.left-(t.left||0),top:s.top-n.top-(t.top||0)}}const Mn=()=>({left:window.scrollX,top:window.scrollY});function Dc(e){let t;if("el"in e){const n=e.el,s=typeof n=="string"&&n.startsWith("#"),o=typeof n=="string"?s?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!o)return;t=Kc(o,e)}else t=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.scrollX,t.top!=null?t.top:window.scrollY)}function _o(e,t){return(history.state?history.state.position-t:-1)+e}const cs=new Map;function Wc(e,t){cs.set(e,t)}function qc(e){const t=cs.get(e);return cs.delete(e),t}let zc=()=>location.protocol+"//"+location.host;function Ur(e,t){const{pathname:n,search:s,hash:o}=t,r=e.indexOf("#");if(r>-1){let c=o.includes(e.slice(r))?e.slice(r).length:1,l=o.slice(c);return l[0]!=="/"&&(l="/"+l),mo(l,"")}return mo(n,e)+s+o}function Gc(e,t,n,s){let o=[],r=[],i=null;const c=({state:p})=>{const y=Ur(e,location),T=n.value,A=t.value;let I=0;if(p){if(n.value=y,t.value=p,i&&i===T){i=null;return}I=A?p.position-A.position:0}else s(y);o.forEach(C=>{C(n.value,T,{delta:I,type:zt.pop,direction:I?I>0?Ut.forward:Ut.back:Ut.unknown})})};function l(){i=n.value}function h(p){o.push(p);const y=()=>{const T=o.indexOf(p);T>-1&&o.splice(T,1)};return r.push(y),y}function f(){const{history:p}=window;p.state&&p.replaceState(z({},p.state,{scroll:Mn()}),"")}function d(){for(const p of r)p();r=[],window.removeEventListener("popstate",c),window.removeEventListener("beforeunload",f)}return window.addEventListener("popstate",c),window.addEventListener("beforeunload",f,{passive:!0}),{pauseListeners:l,listen:h,destroy:d}}function yo(e,t,n,s=!1,o=!1){return{back:e,current:t,forward:n,replaced:s,position:window.history.length,scroll:o?Mn():null}}function Yc(e){const{history:t,location:n}=window,s={value:Ur(e,n)},o={value:t.state};o.value||r(s.value,{back:null,current:s.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function r(l,h,f){const d=e.indexOf("#"),p=d>-1?(n.host&&document.querySelector("base")?e:e.slice(d))+l:zc()+e+l;try{t[f?"replaceState":"pushState"](h,"",p),o.value=h}catch(y){console.error(y),n[f?"replace":"assign"](p)}}function i(l,h){const f=z({},t.state,yo(o.value.back,l,o.value.forward,!0),h,{position:o.value.position});r(l,f,!0),s.value=l}function c(l,h){const f=z({},o.value,t.state,{forward:l,scroll:Mn()});r(f.current,f,!0);const d=z({},yo(s.value,l,null),{position:f.position+1},h);r(l,d,!1),s.value=l}return{location:s,state:o,push:c,replace:i}}function Qc(e){e=Bc(e);const t=Yc(e),n=Gc(e,t.state,t.location,t.replace);function s(r,i=!0){i||n.pauseListeners(),history.go(r)}const o=z({location:"",base:e,go:s,createHref:Vc.bind(null,e)},t,n);return Object.defineProperty(o,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(o,"state",{enumerable:!0,get:()=>t.state.value}),o}function Jc(e){return typeof e=="string"||e&&typeof e=="object"}function Vr(e){return typeof e=="string"||typeof e=="symbol"}const We={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},Kr=Symbol("");var bo;(function(e){e[e.aborted=4]="aborted",e[e.cancelled=8]="cancelled",e[e.duplicated=16]="duplicated"})(bo||(bo={}));function Pt(e,t){return z(new Error,{type:e,[Kr]:!0},t)}function ke(e,t){return e instanceof Error&&Kr in e&&(t==null||!!(e.type&t))}const wo="[^/]+?",Xc={sensitive:!1,strict:!1,start:!0,end:!0},Zc=/[.+*?^${}()[\]/\\]/g;function eu(e,t){const n=z({},Xc,t),s=[];let o=n.start?"^":"";const r=[];for(const h of e){const f=h.length?[]:[90];n.strict&&!h.length&&(o+="/");for(let d=0;d<h.length;d++){const p=h[d];let y=40+(n.sensitive?.25:0);if(p.type===0)d||(o+="/"),o+=p.value.replace(Zc,"\\$&"),y+=40;else if(p.type===1){const{value:T,repeatable:A,optional:I,regexp:C}=p;r.push({name:T,repeatable:A,optional:I});const L=C||wo;if(L!==wo){y+=10;try{new RegExp(`(${L})`)}catch(V){throw new Error(`Invalid custom RegExp for param "${T}" (${L}): `+V.message)}}let j=A?`((?:${L})(?:/(?:${L}))*)`:`(${L})`;d||(j=I&&h.length<2?`(?:/${j})`:"/"+j),I&&(j+="?"),o+=j,y+=20,I&&(y+=-8),A&&(y+=-20),L===".*"&&(y+=-50)}f.push(y)}s.push(f)}if(n.strict&&n.end){const h=s.length-1;s[h][s[h].length-1]+=.7000000000000001}n.strict||(o+="/?"),n.end?o+="$":n.strict&&(o+="(?:/|$)");const i=new RegExp(o,n.sensitive?"":"i");function c(h){const f=h.match(i),d={};if(!f)return null;for(let p=1;p<f.length;p++){const y=f[p]||"",T=r[p-1];d[T.name]=y&&T.repeatable?y.split("/"):y}return d}function l(h){let f="",d=!1;for(const p of e){(!d||!f.endsWith("/"))&&(f+="/"),d=!1;for(const y of p)if(y.type===0)f+=y.value;else if(y.type===1){const{value:T,repeatable:A,optional:I}=y,C=T in h?h[T]:"";if(Oe(C)&&!A)throw new Error(`Provided param "${T}" is an array but it is not repeatable (* or + modifiers)`);const L=Oe(C)?C.join("/"):C;if(!L)if(I)p.length<2&&(f.endsWith("/")?f=f.slice(0,-1):d=!0);else throw new Error(`Missing required param "${T}"`);f+=L}}return f||"/"}return{re:i,score:s,keys:r,parse:c,stringify:l}}function tu(e,t){let n=0;for(;n<e.length&&n<t.length;){const s=t[n]-e[n];if(s)return s;n++}return e.length<t.length?e.length===1&&e[0]===80?-1:1:e.length>t.length?t.length===1&&t[0]===80?1:-1:0}function nu(e,t){let n=0;const s=e.score,o=t.score;for(;n<s.length&&n<o.length;){const r=tu(s[n],o[n]);if(r)return r;n++}if(Math.abs(o.length-s.length)===1){if(xo(s))return 1;if(xo(o))return-1}return o.length-s.length}function xo(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}const su={type:0,value:""},ou=/[a-zA-Z0-9_]/;function ru(e){if(!e)return[[]];if(e==="/")return[[su]];if(!e.startsWith("/"))throw new Error(`Invalid path "${e}"`);function t(y){throw new Error(`ERR (${n})/"${h}": ${y}`)}let n=0,s=n;const o=[];let r;function i(){r&&o.push(r),r=[]}let c=0,l,h="",f="";function d(){h&&(n===0?r.push({type:0,value:h}):n===1||n===2||n===3?(r.length>1&&(l==="*"||l==="+")&&t(`A repeatable param (${h}) must be alone in its segment. eg: '/:ids+.`),r.push({type:1,value:h,regexp:f,repeatable:l==="*"||l==="+",optional:l==="*"||l==="?"})):t("Invalid state to consume buffer"),h="")}function p(){h+=l}for(;c<e.length;){if(l=e[c++],l==="\\"&&n!==2){s=n,n=4;continue}switch(n){case 0:l==="/"?(h&&d(),i()):l===":"?(d(),n=1):p();break;case 4:p(),n=s;break;case 1:l==="("?n=2:ou.test(l)?p():(d(),n=0,l!=="*"&&l!=="?"&&l!=="+"&&c--);break;case 2:l===")"?f[f.length-1]=="\\"?f=f.slice(0,-1)+l:n=3:f+=l;break;case 3:d(),n=0,l!=="*"&&l!=="?"&&l!=="+"&&c--,f="";break;default:t("Unknown state");break}}return n===2&&t(`Unfinished custom RegExp for param "${h}"`),d(),i(),o}function iu(e,t,n){const s=eu(ru(e.path),n),o=z(s,{record:e,parent:t,children:[],alias:[]});return t&&!o.record.aliasOf==!t.record.aliasOf&&t.children.push(o),o}function lu(e,t){const n=[],s=new Map;t=So({strict:!1,end:!0,sensitive:!1},t);function o(f){return s.get(f)}function r(f,d,p){const y=!p,T=cu(f);T.aliasOf=p&&p.record;const A=So(t,f),I=[T];if("alias"in f){const j=typeof f.alias=="string"?[f.alias]:f.alias;for(const V of j)I.push(z({},T,{components:p?p.record.components:T.components,path:V,aliasOf:p?p.record:T}))}let C,L;for(const j of I){const{path:V}=j;if(d&&V[0]!=="/"){const J=d.record.path,B=J[J.length-1]==="/"?"":"/";j.path=d.record.path+(V&&B+V)}if(C=iu(j,d,A),p?p.alias.push(C):(L=L||C,L!==C&&L.alias.push(C),y&&f.name&&!Ro(C)&&i(f.name)),T.children){const J=T.children;for(let B=0;B<J.length;B++)r(J[B],C,p&&p.children[B])}p=p||C,(C.record.components&&Object.keys(C.record.components).length||C.record.name||C.record.redirect)&&l(C)}return L?()=>{i(L)}:Bt}function i(f){if(Vr(f)){const d=s.get(f);d&&(s.delete(f),n.splice(n.indexOf(d),1),d.children.forEach(i),d.alias.forEach(i))}else{const d=n.indexOf(f);d>-1&&(n.splice(d,1),f.record.name&&s.delete(f.record.name),f.children.forEach(i),f.alias.forEach(i))}}function c(){return n}function l(f){let d=0;for(;d<n.length&&nu(f,n[d])>=0&&(f.record.path!==n[d].record.path||!Dr(f,n[d]));)d++;n.splice(d,0,f),f.record.name&&!Ro(f)&&s.set(f.record.name,f)}function h(f,d){let p,y={},T,A;if("name"in f&&f.name){if(p=s.get(f.name),!p)throw Pt(1,{location:f});A=p.record.name,y=z(Eo(d.params,p.keys.filter(L=>!L.optional).concat(p.parent?p.parent.keys.filter(L=>L.optional):[]).map(L=>L.name)),f.params&&Eo(f.params,p.keys.map(L=>L.name))),T=p.stringify(y)}else if(f.path!=null)T=f.path,p=n.find(L=>L.re.test(T)),p&&(y=p.parse(T),A=p.record.name);else{if(p=d.name?s.get(d.name):n.find(L=>L.re.test(d.path)),!p)throw Pt(1,{location:f,currentLocation:d});A=p.record.name,y=z({},d.params,f.params),T=p.stringify(y)}const I=[];let C=p;for(;C;)I.unshift(C.record),C=C.parent;return{name:A,path:T,params:y,matched:I,meta:au(I)}}return e.forEach(f=>r(f)),{addRoute:r,resolve:h,removeRoute:i,getRoutes:c,getRecordMatcher:o}}function Eo(e,t){const n={};for(const s of t)s in e&&(n[s]=e[s]);return n}function cu(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:uu(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||null:e.component&&{default:e.component}}}function uu(e){const t={},n=e.props||!1;if("component"in e)t.default=n;else for(const s in e.components)t[s]=typeof n=="object"?n[s]:n;return t}function Ro(e){for(;e;){if(e.record.aliasOf)return!0;e=e.parent}return!1}function au(e){return e.reduce((t,n)=>z(t,n.meta),{})}function So(e,t){const n={};for(const s in e)n[s]=s in t?t[s]:e[s];return n}function Dr(e,t){return t.children.some(n=>n===e||Dr(e,n))}function fu(e){const t={};if(e===""||e==="?")return t;const s=(e[0]==="?"?e.slice(1):e).split("&");for(let o=0;o<s.length;++o){const r=s[o].replace(Fr," "),i=r.indexOf("="),c=qt(i<0?r:r.slice(0,i)),l=i<0?null:qt(r.slice(i+1));if(c in t){let h=t[c];Oe(h)||(h=t[c]=[h]),h.push(l)}else t[c]=l}return t}function Co(e){let t="";for(let n in e){const s=e[n];if(n=Mc(n),s==null){s!==void 0&&(t+=(t.length?"&":"")+n);continue}(Oe(s)?s.map(r=>r&&ls(r)):[s&&ls(s)]).forEach(r=>{r!==void 0&&(t+=(t.length?"&":"")+n,r!=null&&(t+="="+r))})}return t}function hu(e){const t={};for(const n in e){const s=e[n];s!==void 0&&(t[n]=Oe(s)?s.map(o=>o==null?null:""+o):s==null?s:""+s)}return t}const du=Symbol(""),Po=Symbol(""),As=Symbol(""),Wr=Symbol(""),us=Symbol("");function $t(){let e=[];function t(s){return e.push(s),()=>{const o=e.indexOf(s);o>-1&&e.splice(o,1)}}function n(){e=[]}return{add:t,list:()=>e.slice(),reset:n}}function Ye(e,t,n,s,o,r=i=>i()){const i=s&&(s.enterCallbacks[o]=s.enterCallbacks[o]||[]);return()=>new Promise((c,l)=>{const h=p=>{p===!1?l(Pt(4,{from:n,to:t})):p instanceof Error?l(p):Jc(p)?l(Pt(2,{from:t,to:p})):(i&&s.enterCallbacks[o]===i&&typeof p=="function"&&i.push(p),c())},f=r(()=>e.call(s&&s.instances[o],t,n,h));let d=Promise.resolve(f);e.length<3&&(d=d.then(h)),d.catch(p=>l(p))})}function Dn(e,t,n,s,o=r=>r()){const r=[];for(const i of e)for(const c in i.components){let l=i.components[c];if(!(t!=="beforeRouteEnter"&&!i.instances[c]))if(pu(l)){const f=(l.__vccOpts||l)[t];f&&r.push(Ye(f,n,s,i,c,o))}else{let h=l();r.push(()=>h.then(f=>{if(!f)return Promise.reject(new Error(`Couldn't resolve component "${c}" at "${i.path}"`));const d=bc(f)?f.default:f;i.components[c]=d;const y=(d.__vccOpts||d)[t];return y&&Ye(y,n,s,i,c,o)()}))}}return r}function pu(e){return typeof e=="object"||"displayName"in e||"props"in e||"__vccOpts"in e}function Oo(e){const t=Be(As),n=Be(Wr),s=ne(()=>t.resolve(ut(e.to))),o=ne(()=>{const{matched:l}=s.value,{length:h}=l,f=l[h-1],d=n.matched;if(!f||!d.length)return-1;const p=d.findIndex(Ct.bind(null,f));if(p>-1)return p;const y=Ao(l[h-2]);return h>1&&Ao(f)===y&&d[d.length-1].path!==y?d.findIndex(Ct.bind(null,l[h-2])):p}),r=ne(()=>o.value>-1&&_u(n.params,s.value.params)),i=ne(()=>o.value>-1&&o.value===n.matched.length-1&&Br(n.params,s.value.params));function c(l={}){return vu(l)?t[ut(e.replace)?"replace":"push"](ut(e.to)).catch(Bt):Promise.resolve()}return{route:s,href:ne(()=>s.value.href),isActive:r,isExactActive:i,navigate:c}}const gu=Rs({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Oo,setup(e,{slots:t}){const n=Ze(Oo(e)),{options:s}=Be(As),o=ne(()=>({[To(e.activeClass,s.linkActiveClass,"router-link-active")]:n.isActive,[To(e.exactActiveClass,s.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive}));return()=>{const r=t.default&&t.default(n);return e.custom?r:Ht("a",{"aria-current":n.isExactActive?e.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:o.value},r)}}}),mu=gu;function vu(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function _u(e,t){for(const n in t){const s=t[n],o=e[n];if(typeof s=="string"){if(s!==o)return!1}else if(!Oe(o)||o.length!==s.length||s.some((r,i)=>r!==o[i]))return!1}return!0}function Ao(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const To=(e,t,n)=>e??t??n,yu=Rs({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:t,slots:n}){const s=Be(us),o=ne(()=>e.route||s.value),r=Be(Po,0),i=ne(()=>{let h=ut(r);const{matched:f}=o.value;let d;for(;(d=f[h])&&!d.components;)h++;return h}),c=ne(()=>o.value.matched[i.value]);cn(Po,ne(()=>i.value+1)),cn(du,c),cn(us,o);const l=or();return rn(()=>[l.value,c.value,e.name],([h,f,d],[p,y,T])=>{f&&(f.instances[d]=h,y&&y!==f&&h&&h===p&&(f.leaveGuards.size||(f.leaveGuards=y.leaveGuards),f.updateGuards.size||(f.updateGuards=y.updateGuards))),h&&f&&(!y||!Ct(f,y)||!p)&&(f.enterCallbacks[d]||[]).forEach(A=>A(h))},{flush:"post"}),()=>{const h=o.value,f=e.name,d=c.value,p=d&&d.components[f];if(!p)return Mo(n.default,{Component:p,route:h});const y=d.props[f],T=y?y===!0?h.params:typeof y=="function"?y(h):y:null,I=Ht(p,z({},T,t,{onVnodeUnmounted:C=>{C.component.isUnmounted&&(d.instances[f]=null)},ref:l}));return Mo(n.default,{Component:I,route:h})||I}}});function Mo(e,t){if(!e)return null;const n=e(t);return n.length===1?n[0]:n}const qr=yu;function bu(e){const t=lu(e.routes,e),n=e.parseQuery||fu,s=e.stringifyQuery||Co,o=e.history,r=$t(),i=$t(),c=$t(),l=Ai(We);let h=We;_t&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const f=Vn.bind(null,v=>""+v),d=Vn.bind(null,$c),p=Vn.bind(null,qt);function y(v,P){let R,M;return Vr(v)?(R=t.getRecordMatcher(v),M=P):M=v,t.addRoute(M,R)}function T(v){const P=t.getRecordMatcher(v);P&&t.removeRoute(P)}function A(){return t.getRoutes().map(v=>v.record)}function I(v){return!!t.getRecordMatcher(v)}function C(v,P){if(P=z({},P||l.value),typeof v=="string"){const a=Kn(n,v,P.path),g=t.resolve({path:a.path},P),_=o.createHref(a.fullPath);return z(a,g,{params:p(g.params),hash:qt(a.hash),redirectedFrom:void 0,href:_})}let R;if(v.path!=null)R=z({},v,{path:Kn(n,v.path,P.path).path});else{const a=z({},v.params);for(const g in a)a[g]==null&&delete a[g];R=z({},v,{params:d(a)}),P.params=d(P.params)}const M=t.resolve(R,P),q=v.hash||"";M.params=f(p(M.params));const X=Fc(s,z({},v,{hash:Tc(q),path:M.path})),u=o.createHref(X);return z({fullPath:X,hash:q,query:s===Co?hu(v.query):v.query||{}},M,{redirectedFrom:void 0,href:u})}function L(v){return typeof v=="string"?Kn(n,v,l.value.path):z({},v)}function j(v,P){if(h!==v)return Pt(8,{from:P,to:v})}function V(v){return fe(v)}function J(v){return V(z(L(v),{replace:!0}))}function B(v){const P=v.matched[v.matched.length-1];if(P&&P.redirect){const{redirect:R}=P;let M=typeof R=="function"?R(v):R;return typeof M=="string"&&(M=M.includes("?")||M.includes("#")?M=L(M):{path:M},M.params={}),z({query:v.query,hash:v.hash,params:M.path!=null?{}:v.params},M)}}function fe(v,P){const R=h=C(v),M=l.value,q=v.state,X=v.force,u=v.replace===!0,a=B(R);if(a)return fe(z(L(a),{state:typeof a=="object"?z({},q,a.state):q,force:X,replace:u}),P||R);const g=R;g.redirectedFrom=P;let _;return!X&&jc(s,M,R)&&(_=Pt(16,{to:g,from:M}),Me(M,M,!0,!1)),(_?Promise.resolve(_):Ae(g,M)).catch(m=>ke(m)?ke(m,2)?m:Ke(m):W(m,g,M)).then(m=>{if(m){if(ke(m,2))return fe(z({replace:u},L(m.to),{state:typeof m.to=="object"?z({},q,m.to.state):q,force:X}),P||g)}else m=tt(g,M,!0,u,q);return Ve(g,M,m),m})}function ye(v,P){const R=j(v,P);return R?Promise.reject(R):Promise.resolve()}function et(v){const P=gt.values().next().value;return P&&typeof P.runWithContext=="function"?P.runWithContext(v):v()}function Ae(v,P){let R;const[M,q,X]=wu(v,P);R=Dn(M.reverse(),"beforeRouteLeave",v,P);for(const a of M)a.leaveGuards.forEach(g=>{R.push(Ye(g,v,P))});const u=ye.bind(null,v,P);return R.push(u),ce(R).then(()=>{R=[];for(const a of r.list())R.push(Ye(a,v,P));return R.push(u),ce(R)}).then(()=>{R=Dn(q,"beforeRouteUpdate",v,P);for(const a of q)a.updateGuards.forEach(g=>{R.push(Ye(g,v,P))});return R.push(u),ce(R)}).then(()=>{R=[];for(const a of X)if(a.beforeEnter)if(Oe(a.beforeEnter))for(const g of a.beforeEnter)R.push(Ye(g,v,P));else R.push(Ye(a.beforeEnter,v,P));return R.push(u),ce(R)}).then(()=>(v.matched.forEach(a=>a.enterCallbacks={}),R=Dn(X,"beforeRouteEnter",v,P,et),R.push(u),ce(R))).then(()=>{R=[];for(const a of i.list())R.push(Ye(a,v,P));return R.push(u),ce(R)}).catch(a=>ke(a,8)?a:Promise.reject(a))}function Ve(v,P,R){c.list().forEach(M=>et(()=>M(v,P,R)))}function tt(v,P,R,M,q){const X=j(v,P);if(X)return X;const u=P===We,a=_t?history.state:{};R&&(M||u?o.replace(v.fullPath,z({scroll:u&&a&&a.scroll},q)):o.push(v.fullPath,q)),l.value=v,Me(v,P,R,u),Ke()}let Te;function Tt(){Te||(Te=o.listen((v,P,R)=>{if(!Qt.listening)return;const M=C(v),q=B(M);if(q){fe(z(q,{replace:!0}),M).catch(Bt);return}h=M;const X=l.value;_t&&Wc(_o(X.fullPath,R.delta),Mn()),Ae(M,X).catch(u=>ke(u,12)?u:ke(u,2)?(fe(u.to,M).then(a=>{ke(a,20)&&!R.delta&&R.type===zt.pop&&o.go(-1,!1)}).catch(Bt),Promise.reject()):(R.delta&&o.go(-R.delta,!1),W(u,M,X))).then(u=>{u=u||tt(M,X,!1),u&&(R.delta&&!ke(u,8)?o.go(-R.delta,!1):R.type===zt.pop&&ke(u,20)&&o.go(-1,!1)),Ve(M,X,u)}).catch(Bt)}))}let dt=$t(),oe=$t(),G;function W(v,P,R){Ke(v);const M=oe.list();return M.length?M.forEach(q=>q(v,P,R)):console.error(v),Promise.reject(v)}function je(){return G&&l.value!==We?Promise.resolve():new Promise((v,P)=>{dt.add([v,P])})}function Ke(v){return G||(G=!v,Tt(),dt.list().forEach(([P,R])=>v?R(v):P()),dt.reset()),v}function Me(v,P,R,M){const{scrollBehavior:q}=e;if(!_t||!q)return Promise.resolve();const X=!R&&qc(_o(v.fullPath,0))||(M||!R)&&history.state&&history.state.scroll||null;return cr().then(()=>q(v,P,X)).then(u=>u&&Dc(u)).catch(u=>W(u,v,P))}const pe=v=>o.go(v);let pt;const gt=new Set,Qt={currentRoute:l,listening:!0,addRoute:y,removeRoute:T,hasRoute:I,getRoutes:A,resolve:C,options:e,push:V,replace:J,go:pe,back:()=>pe(-1),forward:()=>pe(1),beforeEach:r.add,beforeResolve:i.add,afterEach:c.add,onError:oe.add,isReady:je,install(v){const P=this;v.component("RouterLink",mu),v.component("RouterView",qr),v.config.globalProperties.$router=P,Object.defineProperty(v.config.globalProperties,"$route",{enumerable:!0,get:()=>ut(l)}),_t&&!pt&&l.value===We&&(pt=!0,V(o.location).catch(q=>{}));const R={};for(const q in We)Object.defineProperty(R,q,{get:()=>l.value[q],enumerable:!0});v.provide(As,P),v.provide(Wr,Xo(R)),v.provide(us,l);const M=v.unmount;gt.add(v),v.unmount=function(){gt.delete(v),gt.size<1&&(h=We,Te&&Te(),Te=null,l.value=We,pt=!1,G=!1),M()}}};function ce(v){return v.reduce((P,R)=>P.then(()=>et(R)),Promise.resolve())}return Qt}function wu(e,t){const n=[],s=[],o=[],r=Math.max(t.matched.length,e.matched.length);for(let i=0;i<r;i++){const c=t.matched[i];c&&(e.matched.find(h=>Ct(h,c))?s.push(c):n.push(c));const l=e.matched[i];l&&(t.matched.find(h=>Ct(h,l))||o.push(l))}return[n,s,o]}class xu{constructor(t){this.domainOrigin=t,this.score=0}updateScore(t){this.score+=t}}class Eu{constructor(t){this.domainOrigin=t,this.messages=[]}getTimestamp(){const t=new Date,n=t.getHours().toString().padStart(2,"0"),s=t.getMinutes().toString().padStart(2,"0");return`${n}:${s}`}pushUserReplyToMessages(t){this.messages.push({sender:"user",body:t,responses:[],timestamp:this.getTimestamp()})}apiGetReplyFromChatbot(t,n,s){return console.log("In apiGetReplyFromChatbot"),new Promise((o,r)=>{const i={};t!=""&&t!=null&&(i.user_reply=t,i.message_id=n,i.previous_question=s,this.pushUserReplyToMessages(t));const c={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)},l=this.domainOrigin+"/api/chatbot/response";fetch(l,c).then(h=>h.json()).then(h=>{try{h.rc==0?(h.chatgpt_reply&&(h.chatgpt_reply.timestamp=this.getTimestamp(),this.messages.push(h.chatgpt_reply)),h.chatbot_reply.timestamp=this.getTimestamp(),this.messages.push(h.chatbot_reply),o(h.message)):console.log("Failed to get chatbot reply")}catch(f){console.log(f),r(f)}}).catch(h=>{console.log(h),r(h)})})}}const Yt=(e,t)=>{const n=e.__vccOpts||e;for(const[s,o]of t)n[s]=o;return n},Ru={props:{user:{type:Object}},data(){return{}}},Su={class:"max-container py-2 flex justify-between bg-dark-turquoise"},Cu={class:"text-white ms-4 font-semibold text-2xl"},Pu=te("div",{class:"flex gap-x-2 me-2"},[te("button",{class:"border-red-500 border-2 hover:bg-red-500 text-off-white w-24 h-8 rounded-full"},"Login"),te("button",{class:"border-red-500 border-2 hover:bg-red-500 text-off-white w-24 h-8 rounded-full"},"Register")],-1);function Ou(e,t,n,s,o,r){return we(),Pe("nav",Su,[te("h1",Cu,hn(n.user.score)+" 🔥",1),Pu])}const zr=Yt(Ru,[["render",Ou]]),Au=e=>(Ui("data-v-689b19ef"),e=e(),Vi(),e),Tu={class:"relative"},Mu={class:"fixed top-0 left-0 right-0"},Iu={class:"pt-[48px] h-screen"},$u=Au(()=>te("footer",null,null,-1)),Nu={components:{NavBar:zr},data(){return{darkMode:!1}},methods:{}},Lu=Object.assign(Nu,{__name:"App",setup(e){let t=window.location.origin;t.slice(-5)==":5173"&&(t=t.replace(":5173",":5000"));const n=Ze(new xu(t)),s=Ze(new Eu(t));return(o,r)=>(we(),Pe("div",null,[te("header",Tu,[te("div",Mu,[ie(zr,{user:n},null,8,["user"])])]),te("main",Iu,[ie(ut(qr),{user:n,chatbot:s},null,8,["user","chatbot"])]),$u]))}}),Fu=Yt(Lu,[["__scopeId","data-v-689b19ef"]]),ju={props:{sender:{type:String},message:{type:String},timestamp:{type:String},continuedMessage:{type:Boolean,default:!1}}},ku={class:"pt-1 px-2 flex flex-col"},Hu={key:0,class:"w-8 h-8 bg-black rounded-full"};function Bu(e,t,n,s,o,r){return we(),Pe("section",ku,[n.continuedMessage?eo("",!0):(we(),Pe("p",{key:0,class:wt(["text-slate-gray text-sm px-[48px]",{"text-right":n.sender!=="bot"}])},hn(n.timestamp),3)),te("div",{class:wt(["flex gap-x-4",{"justify-start flex-row-reverse":n.sender!=="bot","px-[48px]":n.continuedMessage}])},[n.continuedMessage?eo("",!0):(we(),Pe("span",Hu)),te("span",{class:wt(["py-1 px-3 rounded-lg max-w-48 sm:max-w-72 font-montserrat text-sm flex items-center",{"bg-blue-500 text-white":n.sender!=="bot","bg-slate-200":n.sender=="bot"}])},hn(n.message),3)],2)])}const Uu=Yt(ju,[["render",Bu]]),Vu={emits:["emitResponse"],props:{options:{type:Array}},data(){return{message:""}},methods:{clickButton(e){this.message=e},sendMessage(){this.$emit("emitResponse",this.message),this.message=""}}},Ku={class:"flex flex-col justify-center px-4 pb-4 pt-1 max-container"},Du={class:"flex pb-2 overflow-x-auto"},Wu={class:"flex gap-x-2 pb-2"},qu=["onClick"],zu={class:"w-full border py-2 px-3 rounded-xl flex justify-between"},Gu={class:"ps-3"};function Yu(e,t,n,s,o,r){const i=Zn("v-icon");return we(),Pe("section",Ku,[te("div",Du,[te("div",Wu,[(we(!0),Pe(Re,null,wr(n.options,(c,l)=>(we(),Pe("div",{key:l,class:"pt-1"},[te("button",{class:"border border-slate-400 rounded-full px-3 text-sm font-montserrat whitespace-nowrap hover:bg-blue-500",onClick:h=>r.clickButton(c)},hn(c),9,qu)]))),128))])]),te("div",zu,[tl(te("input",{type:"text",placeholder:"Select a response","onUpdate:modelValue":t[0]||(t[0]=c=>o.message=c),class:"w-full placeholder:text-sm flex items-center focus:outline-none"},null,512),[[pc,o.message]]),te("button",Gu,[ie(i,{name:"io-send",fill:"blue",onClick:r.sendMessage},null,8,["onClick"])])])])}const Qu=Yt(Vu,[["render",Yu]]),Ju={components:{Message:Uu,Response:Qu},props:{user:{type:Object},chatbot:{type:Object}},data(){return{responses:[]}},methods:{checkPreviousSender(e){if(e!==0)return this.chatbot.messages[e-1].sender===this.chatbot.messages[e].sender},async handleUserResponse(e){await this.chatbot.apiGetReplyFromChatbot(e,this.chatbot.messages[this.chatbot.messages.length-1].id,this.chatbot.messages[this.chatbot.messages.length-1].body),this.responses=this.chatbot.messages[this.chatbot.messages.length-1].responses,this.user.updateScore(5),this.scrollToBottom()},scrollToBottom(){this.$refs.hiddenContent.scrollIntoView({behavior:"smooth"})}},async created(){await this.chatbot.apiGetReplyFromChatbot(null,null,null),this.responses=this.chatbot.messages[this.chatbot.messages.length-1].responses}},Xu={class:"border-x-2 border-dark-turquoise max-container h-screen flex flex-col"},Zu={class:"flex flex-col gap-y-1 overflow-y-auto"},ea={ref:"hiddenContent",class:"pb-[150px]"},ta={class:"relative"},na={class:"fixed bottom-0 left-0 right-0 bg-white border-x-2 border-dark-turquoise max-container"};function sa(e,t,n,s,o,r){const i=Zn("Message"),c=Zn("Response");return we(),Pe("div",null,[te("div",Xu,[te("section",Zu,[(we(!0),Pe(Re,null,wr(n.chatbot.messages,(l,h)=>(we(),Pe("div",{key:h},[ie(i,{sender:l.sender,message:l.body,timestamp:l.timestamp,continuedMessage:r.checkPreviousSender(h)},null,8,["sender","message","timestamp","continuedMessage"])]))),128)),te("div",ea,null,512)]),te("section",ta,[te("div",na,[ie(c,{options:o.responses,onEmitResponse:r.handleUserResponse},null,8,["options","onEmitResponse"])])])])])}const oa=Yt(Ju,[["render",sa],["__scopeId","data-v-7774fbe7"]]),ra=bu({history:Qc("./"),routes:[{path:"/",name:"chat",component:oa}]}),ia={"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;","&":"&amp;"};let la=0;var ca=e=>e.replace(/[<>"&]/g,t=>ia[t]||t),ua=e=>e+la++;const rt={},aa=e=>{const{name:t,paths:n=[],d:s,polygons:o=[],points:r}=e;s&&n.push({d:s}),r&&o.push({points:r}),rt[t]=Object.assign({},e,{paths:n,polygons:o}),rt[t].minX||(rt[t].minX=0),rt[t].minY||(rt[t].minY=0)},fa=(...e)=>{for(const t of e)aa(t)},ha=Rs({name:"OhVueIcon",props:{name:{type:String,validator:e=>!e||e in rt||(console.warn(`Invalid prop: prop "name" is referring to an unregistered icon "${e}".
Please make sure you have imported this icon before using it.`),!1)},title:String,fill:String,scale:{type:[Number,String],default:1},animation:{validator:e=>["spin","spin-pulse","wrench","ring","pulse","flash","float"].includes(e)},hover:Boolean,flip:{validator:e=>["horizontal","vertical","both"].includes(e)},speed:{validator:e=>e==="fast"||e==="slow"},label:String,inverse:Boolean},setup(e){const t=or([]),n=Ze({outerScale:1.2,x:null,y:null}),s=Ze({width:0,height:0}),o=ne(()=>{const A=Number(e.scale);return isNaN(A)||A<=0?(console.warn('Invalid prop: prop "scale" should be a number over 0.'),n.outerScale):A*n.outerScale}),r=ne(()=>({"ov-icon":!0,"ov-inverse":e.inverse,"ov-flip-horizontal":e.flip==="horizontal","ov-flip-vertical":e.flip==="vertical","ov-flip-both":e.flip==="both","ov-spin":e.animation==="spin","ov-spin-pulse":e.animation==="spin-pulse","ov-wrench":e.animation==="wrench","ov-ring":e.animation==="ring","ov-pulse":e.animation==="pulse","ov-flash":e.animation==="flash","ov-float":e.animation==="float","ov-hover":e.hover,"ov-fast":e.speed==="fast","ov-slow":e.speed==="slow"})),i=ne(()=>e.name?rt[e.name]:null),c=ne(()=>i.value?`${i.value.minX} ${i.value.minY} ${i.value.width} ${i.value.height}`:`0 0 ${h.value} ${f.value}`),l=ne(()=>{if(!i.value)return 1;const{width:A,height:I}=i.value;return Math.max(A,I)/16}),h=ne(()=>s.width||i.value&&i.value.width/l.value*o.value||0),f=ne(()=>s.height||i.value&&i.value.height/l.value*o.value||0),d=ne(()=>o.value!==1&&{fontSize:o.value+"em"}),p=ne(()=>{if(!i.value||!i.value.raw)return null;const A={};let I=i.value.raw;return I=I.replace(/\s(?:xml:)?id=(["']?)([^"')\s]+)\1/g,(C,L,j)=>{const V=ua("vat-");return A[j]=V,` id="${V}"`}),I=I.replace(/#(?:([^'")\s]+)|xpointer\(id\((['"]?)([^')]+)\2\)\))/g,(C,L,j,V)=>{const J=L||V;return J&&A[J]?`#${A[J]}`:C}),I}),y=ne(()=>i.value&&i.value.attr?i.value.attr:{}),T=()=>{if(!e.name&&e.name!==null&&t.value.length===0)return void console.warn('Invalid prop: prop "name" is required.');if(i.value)return;let A=0,I=0;t.value.forEach(C=>{C.outerScale=o.value,A=Math.max(A,C.width),I=Math.max(I,C.height)}),s.width=A,s.height=I,t.value.forEach(C=>{C.x=(A-C.width)/2,C.y=(I-C.height)/2})};return _r(()=>{T()}),yr(()=>{T()}),{...Ii(n),children:t,icon:i,klass:r,style:d,width:h,height:f,box:c,attribs:y,raw:p}},created(){const e=this.$parent;e&&e.children&&e.children.push(this)},render(){const e=Object.assign({role:this.$attrs.role||(this.label||this.title?"img":null),"aria-label":this.label||null,"aria-hidden":!(this.label||this.title),width:this.width,height:this.height,viewBox:this.box},this.attribs);this.attribs.stroke?e.stroke=this.fill?this.fill:"currentColor":e.fill=this.fill?this.fill:"currentColor",this.x&&(e.x=this.x.toString()),this.y&&(e.y=this.y.toString());let t={class:this.klass,style:this.style};if(t=Object.assign(t,e),this.raw){const o=this.title?`<title>${ca(this.title)}</title>${this.raw}`:this.raw;t.innerHTML=o}const n=this.title?[Ht("title",this.title)]:[],s=(o,r,i)=>Ht(o,{...r,key:`${o}-${i}`});return Ht("svg",t,this.raw?void 0:n.concat([this.$slots.default?this.$slots.default():this.icon?[...this.icon.paths.map((o,r)=>s("path",o,r)),...this.icon.polygons.map((o,r)=>s("polygon",o,r))]:[]]))}});function Ts(e,t){t===void 0&&(t={});var n=t.insertAt;if(e&&typeof document<"u"){var s=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css",n==="top"&&s.firstChild?s.insertBefore(o,s.firstChild):s.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}Ts(`.ov-icon {
  display: inline-block;
  overflow: visible;
  vertical-align: -0.2em;
}
`);Ts(`/* ---------------- spin ---------------- */
.ov-spin:not(.ov-hover),
.ov-spin.ov-hover:hover,
.ov-parent.ov-hover:hover > .ov-spin {
  animation: ov-spin 1s linear infinite;
}

.ov-spin:not(.ov-hover).ov-fast,
.ov-spin.ov-hover.ov-fast:hover,
.ov-parent.ov-hover:hover > .ov-spin.ov-fast {
  animation: ov-spin 0.7s linear infinite;
}

.ov-spin:not(.ov-hover).ov-slow,
.ov-spin.ov-hover.ov-slow:hover,
.ov-parent.ov-hover:hover > .ov-spin.ov-slow {
  animation: ov-spin 2s linear infinite;
}

/* ---------------- spin-pulse ---------------- */

.ov-spin-pulse:not(.ov-hover),
.ov-spin-pulse.ov-hover:hover,
.ov-parent.ov-hover:hover > .ov-spin-pulse {
  animation: ov-spin 1s infinite steps(8);
}

.ov-spin-pulse:not(.ov-hover).ov-fast,
.ov-spin-pulse.ov-hover.ov-fast:hover,
.ov-parent.ov-hover:hover > .ov-spin-pulse.ov-fast {
  animation: ov-spin 0.7s infinite steps(8);
}

.ov-spin-pulse:not(.ov-hover).ov-slow,
.ov-spin-pulse.ov-hover.ov-slow:hover,
.ov-parent.ov-hover:hover > .ov-spin-pulse.ov-slow {
  animation: ov-spin 2s infinite steps(8);
}

@keyframes ov-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* ---------------- wrench ---------------- */
.ov-wrench:not(.ov-hover),
.ov-wrench.ov-hover:hover,
.ov-parent.ov-hover:hover > .ov-wrench {
  animation: ov-wrench 2.5s ease infinite;
}

.ov-wrench:not(.ov-hover).ov-fast,
.ov-wrench.ov-hover.ov-fast:hover,
.ov-parent.ov-hover:hover > .ov-wrench.ov-fast {
  animation: ov-wrench 1.2s ease infinite;
}

.ov-wrench:not(.ov-hover).ov-slow,
.ov-wrench.ov-hover.ov-slow:hover,
.ov-parent.ov-hover:hover > .ov-wrench.ov-slow {
  animation: ov-wrench 3.7s ease infinite;
}

@keyframes ov-wrench {
  0% {
    transform: rotate(-12deg);
  }

  8% {
    transform: rotate(12deg);
  }

  10%, 28%, 30%, 48%, 50%, 68% {
    transform: rotate(24deg);
  }

  18%, 20%, 38%, 40%, 58%, 60% {
    transform: rotate(-24deg);
  }

  75%, 100% {
    transform: rotate(0deg);
  }
}

/* ---------------- ring ---------------- */
.ov-ring:not(.ov-hover),
.ov-ring.ov-hover:hover,
.ov-parent.ov-hover:hover > .ov-ring {
  animation: ov-ring 2s ease infinite;
}

.ov-ring:not(.ov-hover).ov-fast,
.ov-ring.ov-hover.ov-fast:hover,
.ov-parent.ov-hover:hover > .ov-ring.ov-fast {
  animation: ov-ring 1s ease infinite;
}

.ov-ring:not(.ov-hover).ov-slow,
.ov-ring.ov-hover.ov-slow:hover,
.ov-parent.ov-hover:hover > .ov-ring.ov-slow {
  animation: ov-ring 3s ease infinite;
}

@keyframes ov-ring {
  0% {
    transform: rotate(-15deg);
  }

  2% {
    transform: rotate(15deg);
  }

  4%, 12% {
    transform: rotate(-18deg);
  }

  6% {
    transform: rotate(18deg);
  }

  8% {
    transform: rotate(-22deg);
  }

  10% {
    transform: rotate(22deg);
  }

  12% {
    transform: rotate(-18deg);
  }

  14% {
    transform: rotate(18deg);
  }

  16% {
    transform: rotate(-12deg);
  }

  18% {
    transform: rotate(12deg);
  }

  20%, 100% {
    transform: rotate(0deg);
  }
}

/* ---------------- pulse ---------------- */
.ov-pulse:not(.ov-hover),
.ov-pulse.ov-hover:hover,
.ov-parent.ov-hover:hover > .ov-pulse {
  animation: ov-pulse 2s linear infinite;
}

.ov-pulse:not(.ov-hover).ov-fast,
.ov-pulse.ov-hover.ov-fast:hover,
.ov-parent.ov-hover:hover > .ov-pulse.ov-fast {
  animation: ov-pulse 1s linear infinite;
}

.ov-pulse:not(.ov-hover).ov-slow,
.ov-pulse.ov-hover.ov-slow:hover,
.ov-parent.ov-hover:hover > .ov-pulse.ov-slow {
  animation: ov-pulse 3s linear infinite;
}

@keyframes ov-pulse {
  0% {
    transform: scale(1.1);
  }

  50% {
    transform: scale(0.8);
  }

  100% {
    transform: scale(1.1);
  }
}

/* ---------------- flash ---------------- */
.ov-flash:not(.ov-hover),
.ov-flash.ov-hover:hover,
.ov-parent.ov-hover:hover > .ov-flash {
  animation: ov-flash 2s ease infinite;
}

.ov-flash:not(.ov-hover).ov-fast,
.ov-flash.ov-hover.ov-fast:hover,
.ov-parent.ov-hover:hover > .ov-flash.ov-fast {
  animation: ov-flash 1s ease infinite;
}

.ov-flash:not(.ov-hover).ov-slow,
.ov-flash.ov-hover.ov-slow:hover,
.ov-parent.ov-hover:hover > .ov-flash.ov-slow {
  animation: ov-flash 3s ease infinite;
}

@keyframes ov-flash {
  0%, 100%, 50%{
    opacity: 1;
  }
  25%, 75%{
    opacity: 0;
  }
}

/* ---------------- float ---------------- */
.ov-float:not(.ov-hover),
.ov-float.ov-hover:hover,
.ov-parent.ov-hover:hover > .ov-float {
  animation: ov-float 2s linear infinite;
}

.ov-float:not(.ov-hover).ov-fast,
.ov-float.ov-hover.ov-fast:hover,
.ov-parent.ov-hover:hover > .ov-float.ov-fast {
  animation: ov-float 1s linear infinite;
}

.ov-float:not(.ov-hover).ov-slow,
.ov-float.ov-hover.ov-slow:hover,
.ov-parent.ov-hover:hover > .ov-float.ov-slow {
  animation: ov-float 3s linear infinite;
}

@keyframes ov-float {
  0%, 100% {
    transform: translateY(-3px);
  }
  50% {
    transform: translateY(3px);
  }
}
`);Ts(`.ov-flip-horizontal {
  transform: scale(-1, 1);
}

.ov-flip-vertical {
  transform: scale(1, -1);
}

.ov-flip-both {
  transform: scale(-1, -1);
}

.ov-inverse {
  color: #fff;
}
`);const da={name:"io-send",minX:0,minY:0,width:512,height:512,raw:'<path d="M476.59 227.05l-.16-.07L49.35 49.84A23.56 23.56 0 0027.14 52 24.65 24.65 0 0016 72.59v113.29a24 24 0 0019.52 23.57l232.93 43.07a4 4 0 010 7.86L35.53 303.45A24 24 0 0016 327v113.31A23.57 23.57 0 0026.59 460a23.94 23.94 0 0013.22 4 24.55 24.55 0 009.52-1.93L476.4 285.94l.19-.09a32 32 0 000-58.8z"/>'},Io={enabled:!0,handlePrepend:!1},$o=(e,t)=>{const n=t||e.scrollHeight-e.clientHeight;typeof e.scroll=="function"?e.scroll({top:n}):e.scrollTop=n},Wn=new WeakMap,qn=new WeakMap,zn=(e,t)=>{if(t.enabled===!1)return;if(t.handlePrepend===!1){$o(e);return}const n=e.scrollTop===0&&qn.has(e)&&e.scrollHeight-qn.get(e);n&&$o(e,n),qn.set(e,e.scrollHeight)},pa={mounted:(e,t)=>{const n={...Io,...t.value};zn(e,n)},updated:(e,t)=>{Wn.has(e)&&Wn.get(e).disconnect();const n={...Io,...t.value},s=()=>{zn(e,n)};zn(e,n);const o=new MutationObserver(s);o.observe(e,{childList:!0,subtree:!0}),Wn.set(e,o)}},ga={install:e=>{e.directive("chat-scroll",pa)}};fa(da);const In=vc(Fu);In.use(ra);In.use(ga);In.component("v-icon",ha);In.mount("#app");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
